name: Authentication
description: |-

  Operações de Autenticação
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/google
    metadata:
      groupName: Authentication
      groupDescription: |-

        Operações de Autenticação
      subgroup: ''
      subgroupDescription: ''
      title: 'Autenticação com o Google'
      description: 'Autentica o usuário com o Google e retorna os dados do usuário.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'O token de acesso do usuário.'
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      token: sed
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "user": {
               "id": 1,
               "name": "John Doe",
               "email": "john@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{"error": "Erro na autenticação"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/google
    metadata:
      groupName: Authentication
      groupDescription: |-

        Operações de Autenticação
      subgroup: ''
      subgroupDescription: ''
      title: 'Autenticação com o Google'
      description: 'Autentica o usuário com o Google e retorna os dados do usuário.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'O token de acesso do usuário.'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      token: omnis
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "user": {
               "id": 1,
               "name": "John Doe",
               "email": "john@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{"error": "Erro na autenticação"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
