{"ast":null,"code":"import axios from 'axios';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    ValidationObserver,\n    ValidationProvider\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      if (this.$refs.formObserver) {\n        this.$refs.formObserver.reset(); // Resetar o estado da validação\n      }\n      this.errorMessage = '';\n    },\n    submitForm() {\n      this.errorMessage = ''; // Limpar mensagens de erro anteriores\n\n      if (this.$refs.formObserver) {\n        this.$refs.formObserver.validate().then(valid => {\n          if (valid) {\n            // Cria o objeto FormData para enviar os dados\n            const formData = new FormData();\n            formData.append('name', this.editedContact.name.trim());\n            // Adicione outros campos de entrada ao formData conforme necessário\n\n            // Envia a requisição para atualizar o contato no backend\n            axios.patch(`http://localhost:8000/api/clientes/${this.contact.id}`, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }).then(response => {\n              console.log('Contato editado com sucesso:', response.data);\n              this.showModal = false;\n              this.$emit('update', response.data);\n              this.resetData();\n            }).catch(error => {\n              this.errorMessage = 'Erro ao editar contato.';\n              console.error('Erro ao editar contato:', error);\n            });\n          } else {\n            this.errorMessage = 'Por favor, corrija os erros no formulário.';\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","ValidationObserver","ValidationProvider","name","props","contact","type","Object","required","components","data","showModal","editedContact","errorMessage","methods","resetData","$refs","formObserver","reset","submitForm","validate","then","valid","formData","FormData","append","trim","patch","id","headers","response","console","log","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <ValidationObserver v-slot=\"validation\" ref=\"formObserver\">\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label for=\"name\">Nome:</label>\n          <ValidationProvider rules=\"required|max:255\" v-slot=\"field\" name=\"name\">\n            <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" :class=\"{ 'is-invalid': field && field.errors && field.errors.length > 0 }\">\n            <span v-if=\"field && field.errors && field.errors.length > 0\" class=\"invalid-feedback\">{{ field.errors[0] }}</span>\n          </ValidationProvider>\n        </div>\n        <!-- Adicione outros campos de entrada com validação semelhante -->\n\n        <button type=\"submit\" :disabled=\"validation ? validation.invalid : true\">Salvar</button>\n      </form>\n    </ValidationObserver>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    ValidationObserver,\n    ValidationProvider,\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      errorMessage: '',\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      if (this.$refs.formObserver) {\n        this.$refs.formObserver.reset(); // Resetar o estado da validação\n      }\n      this.errorMessage = '';\n    },\n    submitForm() {\n      this.errorMessage = ''; // Limpar mensagens de erro anteriores\n\n      if (this.$refs.formObserver) {\n        this.$refs.formObserver.validate().then(valid => {\n          if (valid) {\n            // Cria o objeto FormData para enviar os dados\n            const formData = new FormData();\n            formData.append('name', this.editedContact.name.trim());\n            // Adicione outros campos de entrada ao formData conforme necessário\n\n            // Envia a requisição para atualizar o contato no backend\n            axios.patch(`http://localhost:8000/api/clientes/${this.contact.id}`, formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            })\n            .then(response => {\n              console.log('Contato editado com sucesso:', response.data);\n              this.showModal = false;\n              this.$emit('update', response.data);\n              this.resetData();\n            })\n            .catch(error => {\n              this.errorMessage = 'Erro ao editar contato.';\n              console.error('Erro ao editar contato:', error);\n            });\n          } else {\n            this.errorMessage = 'Por favor, corrija os erros no formulário.';\n          }\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.is-invalid {\n  border-color: red; /* Estilo para indicar campos inválidos */\n}\n.invalid-feedback {\n  color: red; /* Cor para mensagens de erro */\n}\n</style>\n"],"mappings":"AAoBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,kBAAkB,EAAEC,kBAAiB,QAAS,cAAc;AAErE,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,UAAU,EAAE;IACVR,kBAAkB;IAClBC;EACF,CAAC;EACDQ,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACP;MAAQ,CAAC;MAClCQ,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACH,aAAY,GAAI;QAAE,GAAG,IAAI,CAACP;MAAQ,CAAC;MACxC,IAAI,IAAI,CAACW,KAAK,CAACC,YAAY,EAAE;QAC3B,IAAI,CAACD,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE;MACnC;MACA,IAAI,CAACL,YAAW,GAAI,EAAE;IACxB,CAAC;IACDM,UAAUA,CAAA,EAAG;MACX,IAAI,CAACN,YAAW,GAAI,EAAE,EAAE;;MAExB,IAAI,IAAI,CAACG,KAAK,CAACC,YAAY,EAAE;QAC3B,IAAI,CAACD,KAAK,CAACC,YAAY,CAACG,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,KAAI,IAAK;UAC/C,IAAIA,KAAK,EAAE;YACT;YACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;YAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACb,aAAa,CAACT,IAAI,CAACuB,IAAI,CAAC,CAAC,CAAC;YACvD;;YAEA;YACA1B,KAAK,CAAC2B,KAAK,CAAE,sCAAqC,IAAI,CAACtB,OAAO,CAACuB,EAAG,EAAC,EAAEL,QAAQ,EAAE;cAC7EM,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB;YACF,CAAC,EACAR,IAAI,CAACS,QAAO,IAAK;cAChBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAACpB,IAAI,CAAC;cAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;cACtB,IAAI,CAACsB,KAAK,CAAC,QAAQ,EAAEH,QAAQ,CAACpB,IAAI,CAAC;cACnC,IAAI,CAACK,SAAS,CAAC,CAAC;YAClB,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAK;cACd,IAAI,CAACtB,YAAW,GAAI,yBAAyB;cAC7CkB,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;YACjD,CAAC,CAAC;UACJ,OAAO;YACL,IAAI,CAACtB,YAAW,GAAI,4CAA4C;UAClE;QACF,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}