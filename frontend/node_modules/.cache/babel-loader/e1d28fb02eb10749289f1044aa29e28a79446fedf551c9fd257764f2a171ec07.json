{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-002fd7de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nome\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Telefone\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ações\"), /*#__PURE__*/_createCommentVNode(\" Adicionei a coluna para as ações \")])], -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"editName\"\n}, \"Nome:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"editEmail\"\n}, \"Email:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"editPhone\"\n}, \"Telefone:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Salvar\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_modal = _resolveComponent(\"b-modal\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"search\",\n    placeholder: \"Buscar contato\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createCommentVNode(\" Tabela de contatos \"), $data.searchQuery.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredContacts, contact => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: contact.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(contact.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.phone), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editContact(contact)\n    }, \"Editar\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Modal de edição \"), _createVNode(_component_b_modal, {\n    modelValue: $data.showEditModal,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.showEditModal = $event),\n    title: \"Editar Contato\",\n    onHidden: $options.resetEditedContact\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"form\", {\n      onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.saveEditedContact && $options.saveEditedContact(...args), [\"prevent\"]))\n    }, [_createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"editName\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedContact.name = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedContact.name]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n      type: \"email\",\n      id: \"editEmail\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.editedContact.email = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedContact.email]])]), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"editPhone\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.editedContact.phone = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedContact.phone]])]), _hoisted_7], 32 /* NEED_HYDRATION */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onHidden\"])]);\n}","map":{"version":3,"names":["key","_createElementVNode","_createCommentVNode","for","type","_createElementBlock","placeholder","_cache","$event","$data","searchQuery","length","_hoisted_1","_hoisted_2","_Fragment","_renderList","$options","filteredContacts","contact","id","_toDisplayString","name","email","phone","onClick","editContact","_hoisted_3","_createVNode","_component_b_modal","modelValue","showEditModal","title","onHidden","resetEditedContact","default","_withCtx","onSubmit","_withModifiers","args","saveEditedContact","_hoisted_4","editedContact","required","_hoisted_5","_hoisted_6","_hoisted_7","_"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"search\" placeholder=\"Buscar contato\" v-model=\"searchQuery\">\n    <!-- Tabela de contatos -->\n    <table v-if=\"searchQuery.length > 0\">\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Email</th>\n          <th>Telefone</th>\n          <th>Ações</th> <!-- Adicionei a coluna para as ações -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"contact in filteredContacts\" :key=\"contact.id\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.phone }}</td>\n          <td>\n            <button @click=\"editContact(contact)\">Editar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <!-- Modal de edição -->\n    <b-modal v-model=\"showEditModal\" title=\"Editar Contato\" @hidden=\"resetEditedContact\">\n      <form @submit.prevent=\"saveEditedContact\">\n        <div>\n          <label for=\"editName\">Nome:</label>\n          <input type=\"text\" id=\"editName\" v-model=\"editedContact.name\" required>\n        </div>\n        <div>\n          <label for=\"editEmail\">Email:</label>\n          <input type=\"email\" id=\"editEmail\" v-model=\"editedContact.email\" required>\n        </div>\n        <div>\n          <label for=\"editPhone\">Telefone:</label>\n          <input type=\"text\" id=\"editPhone\" v-model=\"editedContact.phone\" required>\n        </div>\n        <button type=\"submit\">Salvar</button>\n      </form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [],\n      showEditModal: false,\n      editedContact: {\n        id: null,\n        name: '',\n        email: '',\n        phone: ''\n      }\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.contacts.filter(contact =>\n        contact.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    fetchContacts() {\n      axios.get('http://localhost:8000/api/clientes')\n        .then(response => {\n          console.log('Resposta da API ao buscar clientes:', response.data);\n          if (Array.isArray(response.data)) {\n            this.contacts = response.data;\n          } else {\n            console.error('A resposta da API não é um array:', response.data);\n            this.contacts = [];\n          }\n        })\n        .catch(error => {\n          console.error('Ocorreu um erro ao buscar os clientes:', error);\n          this.contacts = [];\n        });\n    },\n    editContact(contact) {\n      this.editedContact.id = contact.id;\n      this.editedContact.name = contact.name;\n      this.editedContact.email = contact.email;\n      this.editedContact.phone = contact.phone;\n      this.showEditModal = true;\n    },\n    saveEditedContact() {\n      // Aqui você pode enviar os dados do contato editado para a API\n      // e fechar o modal após a edição ser concluída\n      this.showEditModal = false;\n      this.resetEditedContact();\n    },\n    resetEditedContact() {\n      this.editedContact.id = null;\n      this.editedContact.name = '';\n      this.editedContact.email = '';\n      this.editedContact.phone = '';\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para ContactList */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}