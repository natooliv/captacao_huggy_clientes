{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      photoFile: null,\n      // Armazena o arquivo de foto\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      this.photoFile = null;\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      this.photoFile = event.target.files[0];\n      this.editedContact.photo = ''; // Limpa a URL da foto, pois um arquivo foi selecionado\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n      const formData = new FormData();\n      Object.keys(this.editedContact).forEach(key => {\n        if (key !== 'photo' || !this.photoFile) {\n          formData.append(key, this.editedContact[key]);\n        }\n      });\n      if (this.photoFile) {\n        formData.append('photo', this.photoFile);\n      }\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log('Contato editado com sucesso:', response.data);\n        this.showModal = false;\n        this.$emit('update', response.data);\n        this.resetData();\n      }).catch(error => {\n        this.errorMessage = 'Erro ao editar contato.';\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","photoFile","errorMessage","methods","resetData","handleFileUpload","event","target","files","photo","submitForm","console","log","trim","email","phone","address","formData","FormData","keys","forEach","key","append","put","id","headers","then","response","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" @change=\"handleFileUpload\">\n        <input type=\"hidden\" v-model=\"editedContact.photo\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      photoFile: null,  // Armazena o arquivo de foto\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.photoFile = null;\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      this.photoFile = event.target.files[0];\n      this.editedContact.photo = ''; // Limpa a URL da foto, pois um arquivo foi selecionado\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n\n      const formData = new FormData();\n      Object.keys(this.editedContact).forEach(key => {\n        if (key !== 'photo' || !this.photoFile) {\n          formData.append(key, this.editedContact[key]);\n        }\n      });\n\n      if (this.photoFile) {\n        formData.append('photo', this.photoFile);\n      }\n\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      })\n      .then(response => {\n        console.log('Contato editado com sucesso:', response.data);\n        this.showModal = false;\n        this.$emit('update', response.data);\n        this.resetData();\n      })\n      .catch(error => {\n        this.errorMessage = 'Erro ao editar contato.';\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};\n</script>\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MAClCO,SAAS,EAAE,IAAI;MAAG;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACJ,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,CAACO,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,YAAW,GAAI,EAAE;IACxB,CAAC;IACDG,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACL,SAAQ,GAAIK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACtC,IAAI,CAACR,aAAa,CAACS,KAAI,GAAI,EAAE,EAAE;IACjC,CAAC;IACDC,UAAUA,CAAA,EAAG;MACXC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACV,YAAW,GAAI,EAAE;MAEtB,IAAI,CAAC,IAAI,CAACF,aAAa,CAACR,IAAI,CAACqB,IAAI,CAAC,KAAK,CAAC,IAAI,CAACb,aAAa,CAACc,KAAK,CAACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAACb,aAAa,CAACe,KAAK,CAACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAACb,aAAa,CAACgB,OAAO,CAACH,IAAI,CAAC,CAAC,EAAE;QACjJ,IAAI,CAACX,YAAW,GAAI,mDAAmD;QACvE;MACF;MAEA,MAAMe,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BtB,MAAM,CAACuB,IAAI,CAAC,IAAI,CAACnB,aAAa,CAAC,CAACoB,OAAO,CAACC,GAAE,IAAK;QAC7C,IAAIA,GAAE,KAAM,OAAM,IAAK,CAAC,IAAI,CAACpB,SAAS,EAAE;UACtCgB,QAAQ,CAACK,MAAM,CAACD,GAAG,EAAE,IAAI,CAACrB,aAAa,CAACqB,GAAG,CAAC,CAAC;QAC/C;MACF,CAAC,CAAC;MAEF,IAAI,IAAI,CAACpB,SAAS,EAAE;QAClBgB,QAAQ,CAACK,MAAM,CAAC,OAAO,EAAE,IAAI,CAACrB,SAAS,CAAC;MAC1C;MAEAV,KAAK,CAACgC,GAAG,CAAE,sCAAqC,IAAI,CAAC7B,OAAO,CAAC8B,EAAG,EAAC,EAAEP,QAAQ,EAAE;QAC3EQ,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;QAChBhB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEe,QAAQ,CAAC7B,IAAI,CAAC;QAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;QACtB,IAAI,CAAC6B,KAAK,CAAC,QAAQ,EAAED,QAAQ,CAAC7B,IAAI,CAAC;QACnC,IAAI,CAACM,SAAS,CAAC,CAAC;MAClB,CAAC,EACAyB,KAAK,CAACC,KAAI,IAAK;QACd,IAAI,CAAC5B,YAAW,GAAI,yBAAyB;QAC7CS,OAAO,CAACmB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}