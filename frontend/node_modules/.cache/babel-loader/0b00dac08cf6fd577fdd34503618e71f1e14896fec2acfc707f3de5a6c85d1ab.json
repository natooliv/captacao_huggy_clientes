{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-002fd7de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"contact-list-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-and-add-container\"\n};\nconst _hoisted_3 = {\n  class: \"search-input-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-search search-icon\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0,\n  class: \"contacts-table\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nome\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Telefone\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Foto\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ações\")])], -1 /* HOISTED */));\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"no-contacts\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"path_to_your_no_contacts_image.png\",\n  alt: \"Sem contatos\",\n  class: \"no-contacts-image\"\n}), /*#__PURE__*/_createElementVNode(\"p\", null, \"Ainda não há contatos\")], -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"contact-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Seção de busca e botão de adicionar contato \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"search\",\n    class: \"search-input\",\n    placeholder: \"Buscar contato\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _hoisted_4]), _createCommentVNode(\" Botão para acionar o modal de adicionar novo contato \"), _createElementVNode(\"button\", {\n    class: \"add-contact-button\",\n    onClick: _cache[1] || (_cache[1] = $event => $data.showAddModal = true)\n  }, \" + Adicionar contato \")]), _createCommentVNode(\" Tabela de contatos \"), $options.filteredContacts.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredContacts, contact => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: contact.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(contact.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.phone), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: $options.getPhotoUrl(contact.photo),\n      alt: \"Foto do contato\",\n      class: \"contact-photo\"\n    }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"edit-button\",\n      onClick: $event => $options.openEditModal(contact)\n    }, \"Editar\", 8 /* PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n      class: \"delete-button\",\n      onClick: $event => $options.deleteContact(contact.id)\n    }, \"Excluir\", 8 /* PROPS */, _hoisted_9)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Mensagem de 'sem contatos' e botão de adicionar, se não houver contatos \"), _hoisted_10], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"edit-button\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.openEditModal(_ctx.contact))\n  }, \"Editar\"), _createElementVNode(\"button\", {\n    class: \"delete-button\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.deleteContact(_ctx.contact.id))\n  }, \"Excluir\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","src","alt","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","type","placeholder","_cache","$event","$data","searchQuery","_hoisted_4","onClick","showAddModal","$options","filteredContacts","length","_hoisted_5","_hoisted_6","_Fragment","_renderList","contact","id","_toDisplayString","name","email","phone","getPhotoUrl","photo","_hoisted_7","openEditModal","_hoisted_8","deleteContact","_hoisted_9","_hoisted_10","_hoisted_11","_ctx"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div class=\"contact-list-container\">\n    <!-- Seção de busca e botão de adicionar contato -->\n    <div class=\"search-and-add-container\">\n      <div class=\"search-input-container\">\n        <input type=\"search\" class=\"search-input\" placeholder=\"Buscar contato\" v-model=\"searchQuery\">\n        <i class=\"bi bi-search search-icon\"></i>\n      </div>\n      <!-- Botão para acionar o modal de adicionar novo contato -->\n      <button class=\"add-contact-button\" @click=\"showAddModal = true\">\n        + Adicionar contato\n      </button>\n    </div>\n\n    <!-- Tabela de contatos -->\n    <table v-if=\"filteredContacts.length > 0\" class=\"contacts-table\">\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Email</th>\n          <th>Telefone</th>\n          <th>Foto</th>\n          <th>Ações</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"contact in filteredContacts\" :key=\"contact.id\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.phone }}</td>\n          <td>\n            <img :src=\"getPhotoUrl(contact.photo)\" alt=\"Foto do contato\" class=\"contact-photo\">\n          </td>\n          <td>\n            <button class=\"edit-button\" @click=\"openEditModal(contact)\">Editar</button>\n            <button class=\"delete-button\" @click=\"deleteContact(contact.id)\">Excluir</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Mensagem de 'sem contatos' e botão de adicionar, se não houver contatos -->\n    <div v-else class=\"no-contacts\">\n      <img src=\"path_to_your_no_contacts_image.png\" alt=\"Sem contatos\" class=\"no-contacts-image\">\n      <p>Ainda não há contatos</p>\n    </div>\n\n    <div class=\"contact-actions\">\n            <button class=\"edit-button\" @click=\"openEditModal(contact)\">Editar</button>\n            <button class=\"delete-button\" @click=\"deleteContact(contact.id)\">Excluir</button>\n          </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport EditContactModal from './EditContactModal';\nimport AddContactForm from './AddContactForm';\n\nexport default {\n  name: 'ContactList',\n  components: {\n    EditContactModal,\n    AddContactForm,\n  },\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [],\n      selectedContact: null,\n      showAddModal: false,\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.searchQuery.length > 0\n        ? this.contacts.filter(contact =>\n            contact.name.toLowerCase().includes(this.searchQuery.toLowerCase()))\n        : this.contacts;\n    },\n  },\n  methods: {\n    fetchContacts() {\n      axios.get('http://localhost:8000/api/clientes')\n        .then(response => {\n          this.contacts = Array.isArray(response.data) ? response.data : [];\n        })\n        .catch(error => {\n          console.error('Erro ao buscar os clientes:', error);\n          this.contacts = [];\n        });\n    },\n    openEditModal(contact) {\n      this.selectedContact = { ...contact };\n    },\n    updateContact(updatedContact) {\n      const index = this.contacts.findIndex(contact => contact.id === updatedContact.id);\n      if (index !== -1) {\n        this.contacts.splice(index, 1, updatedContact);\n      }\n      this.selectedContact = null;\n    },\n    getPhotoUrl(photoPath) {\n    // Construa o URL completo da foto usando o caminho relativo da foto\n    return 'http://localhost:8000/uploads/' + photoPath;\n  },\n    deleteContact(contactId) {\n      axios.delete(`http://localhost:8000/api/clientes/${contactId}`)\n        .then(response => {\n          console.log('Contato excluído com sucesso:', response.data);\n          this.contacts = this.contacts.filter(contact => contact.id !== contactId);\n        })\n        .catch(error => {\n          console.error('Erro ao excluir contato:', error);\n        });\n    },\n    handleContactAdded(newContact) {\n      this.contacts.push(newContact);\n      this.showAddModal = false;\n    },\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n};\n</script>\n\n<style scoped>\n.search-and-add-container {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.search-input-container {\n  position: relative;\n  flex-grow: 1;\n  margin-right: 10px;\n}\n.contacts-table {\n  width: 100%;\n  margin-top: 20px;\n}\n\n.contact-header {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #eee;\n  font-weight: bold;\n}\n\n.contact-body {\n  margin-top: 10px;\n}\n\n.contact-row {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.contact-photo img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.contact-name,\n.contact-email,\n.contact-phone {\n  flex: 1;\n  padding: 0 10px;\n}\n\n.contact-actions {\n  display: flex;\n  justify-content: flex-end;\n}\n.search-input {\n  padding: 10px 10px 10px 35px; /* Espaço para o ícone */\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  display: flex;\n  color: #E1E1E1;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px; /* Ajuste conforme necessário */\n  top: 50%;\n  transform: translateY(-50%);\n  color: #9eabb8; /* Cor do ícone */\n  pointer-events: none; /* O ícone não afetará a interação com o input */\n  z-index: 5;\n}\n.contact-list-container {\n  padding: 20px;\n}\n\n.search-and-add-container {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n\n.add-contact-button {\n  background-color: #321BDE;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.contacts-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.contacts-table th, .contacts-table td {\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.edit-button, .delete-button {\n  padding: 5px 10px;\n  margin-right: 5px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.edit-button {\n  background-color: #FFC107;\n  color: white;\n}\n\n.delete-button {\n  background-color: #F44336;\n  color: white;\n}\n\n.no-contacts {\n  text-align: center;\n  padding: 20px;\n}\n\n.no-contacts p {\n  margin-top: 16px;\n  margin-bottom: 24px;\n}\n\n.no-contacts-image {\n  max-width: 100px;\n  margin-bottom: 8px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}