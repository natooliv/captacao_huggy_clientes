{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      if (this.$refs.photo) {\n        this.$refs.photo.value = ''; // Limpa o campo de arquivo após o reset\n      }\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const img = new Image();\n          img.src = e.target.result;\n          img.onload = () => {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const max_width = 8000;\n            const scaleSize = max_width / img.width;\n            canvas.width = max_width;\n            canvas.height = img.height * scaleSize;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            this.editedContact.photo = canvas.toDataURL('image/jpeg');\n          };\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact).then(response => {\n        console.log('Contato editado com sucesso:', response.data);\n        this.showModal = false;\n        this.$emit('update', response.data);\n        this.resetData();\n      }).catch(error => {\n        this.errorMessage = 'Erro ao editar contato.';\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","errorMessage","methods","resetData","$refs","photo","value","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","img","Image","src","result","canvas","document","createElement","ctx","getContext","max_width","scaleSize","width","height","drawImage","toDataURL","readAsDataURL","submitForm","console","log","trim","email","phone","address","put","id","then","response","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" @change=\"handleFileUpload\">\n        <input type=\"text\" v-model=\"editedContact.photo\" placeholder=\"Ou insira a URL da foto\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      if (this.$refs.photo) {\n        this.$refs.photo.value = ''; // Limpa o campo de arquivo após o reset\n      }\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const img = new Image();\n          img.src = e.target.result;\n          img.onload = () => {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const max_width = 8000;\n            const scaleSize = max_width / img.width;\n            canvas.width = max_width;\n            canvas.height = img.height * scaleSize;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            this.editedContact.photo = canvas.toDataURL('image/jpeg');\n          };\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact)\n        .then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n          this.resetData();\n        })\n        .catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}