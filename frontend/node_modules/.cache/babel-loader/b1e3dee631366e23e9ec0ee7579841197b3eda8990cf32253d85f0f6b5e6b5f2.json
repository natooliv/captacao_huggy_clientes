{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {},\n      errorMessage: ''\n    };\n  },\n  mounted() {\n    this.initializeEditedContact();\n  },\n  methods: {\n    initializeEditedContact() {\n      console.log('Inicializando editedContact com', this.contact);\n      // Certifique-se de que o objeto contact foi carregado antes de tentar acessar suas propriedades\n      if (this.contact) {\n        this.editedContact = {\n          ...this.contact,\n          photoUrl: this.contact.photo ? this.getPhotoUrl(this.contact.photo) : null\n        };\n      }\n      console.log('editedContact inicializado:', this.editedContact);\n    },\n    getPhotoUrl(photoPath) {\n      // Certifique-se de não duplicar o segmento 'temp/'\n      const basePath = 'http://localhost:8000/uploads/temp/';\n      if (photoPath && photoPath.startsWith('temp/')) {\n        return basePath + photoPath.substring(5); // Remove 'temp/' do início se já estiver presente\n      } else {\n        return basePath + photoPath;\n      }\n    },\n    triggerFileUpload() {\n      this.$refs.photoInput.click();\n    },\n    handleFileUpload(event) {\n      const selectedFile = event.target.files[0];\n      if (selectedFile) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.editedContact.photoUrl = e.target.result;\n          console.log('photoUrl atualizado:', this.editedContact.photoUrl);\n        };\n        reader.readAsDataURL(selectedFile);\n        const formData = new FormData();\n        formData.append('photo', selectedFile);\n        axios.post('http://localhost:8000/api/upload-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(response => {\n          this.editedContact.photo = response.data.temporaryPath;\n          this.editedContact.photoUrl = this.getPhotoUrl(response.data.temporaryPath);\n          console.log('photoUrl após upload:', this.editedContact.photoUrl);\n        }).catch(error => {\n          console.error('Erro ao fazer upload da imagem:', error);\n          this.errorMessage = 'Erro ao fazer upload da imagem.';\n        });\n      }\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact).then(response => {\n        console.log('Contato editado com sucesso:', response.data);\n        this.showModal = false;\n        this.$emit('update', response.data);\n        this.resetData();\n      }).catch(error => {\n        this.errorMessage = 'Erro ao editar contato.';\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","errorMessage","mounted","initializeEditedContact","methods","console","log","photoUrl","photo","getPhotoUrl","photoPath","basePath","startsWith","substring","triggerFileUpload","$refs","photoInput","click","handleFileUpload","event","selectedFile","target","files","reader","FileReader","onload","e","result","readAsDataURL","formData","FormData","append","post","headers","then","response","temporaryPath","catch","error","submitForm","trim","email","phone","address","put","id","$emit","resetData"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["\n\n<template>\n  <div class=\"edit-contact-modal\">\n    <h2 class=\"title\">Editar Contato</h2>\n    <div>\n    <hr class=\"my-custom-line\">\n  </div>\n    <form @submit.prevent=\"submitForm\" class=\"edit-contact-form\">\n\n      <!-- Campos do formulário -->\n\n            <div class=\"form-group\">\n              <div class=\"photo-container-edit\">\n        <div class=\"photo-preview\" @click=\"triggerFileUpload\">\n          <img v-if=\"editedContact.photoUrl\" :src=\"editedContact.photoUrl\" alt=\"Foto do contato\" class=\"photo-image\">\n          <input type=\"file\" id=\"photo\" ref=\"photoInput\" @change=\"handleFileUpload\" hidden>\n        </div>\n      </div>\n      \n\n\n\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" placeholder=\"Nome completo\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" placeholder=\"Email\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"tel\" id=\"phone\" v-model=\"editedContact.phone\" placeholder=\"Telefone\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"celular\">Celular:</label>\n        <input type=\"tel\" id=\"celular\" v-model=\"editedContact.celular\" placeholder=\"Celular\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" placeholder=\"Endereço\" required>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"bairro\">Bairro:</label>\n          <input type=\"text\" id=\"bairro\" v-model=\"editedContact.bairro\" placeholder=\"Bairro\" required>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"estado\">Estado:</label>\n          <input type=\"text\" id=\"estado\" v-model=\"editedContact.estado\" placeholder=\"Estado\" required>\n        </div>\n      </div>\n\n     \n      <div>\n    <hr class=\"my-custom-line-end\">\n  </div>\n      <!-- Botões de ação -->\n      <div class=\"form-actions\">\n        <button type=\"button\" @click=\"resetData\">Cancelar</button>\n        <button type=\"submit\">Salvar</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact:{},\n     \n      errorMessage: ''\n    };\n  },\n  mounted() {\n    this.initializeEditedContact();\n  },\n  methods: {\n    initializeEditedContact() {\n      console.log('Inicializando editedContact com', this.contact);\n      // Certifique-se de que o objeto contact foi carregado antes de tentar acessar suas propriedades\n      if (this.contact) {\n        this.editedContact = {\n          ...this.contact,\n          photoUrl: this.contact.photo ? this.getPhotoUrl(this.contact.photo) : null\n        };\n      }\n      console.log('editedContact inicializado:', this.editedContact);\n    },\n    getPhotoUrl(photoPath) {\n  // Certifique-se de não duplicar o segmento 'temp/'\n  const basePath = 'http://localhost:8000/uploads/temp/';\n  if (photoPath && photoPath.startsWith('temp/')) {\n    return basePath + photoPath.substring(5); // Remove 'temp/' do início se já estiver presente\n  } else {\n    return basePath + photoPath;\n  }\n},\n    triggerFileUpload() {\n      this.$refs.photoInput.click();\n    },\n    handleFileUpload(event) {\n  const selectedFile = event.target.files[0];\n  if (selectedFile) {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      this.editedContact.photoUrl = e.target.result;\n      console.log('photoUrl atualizado:', this.editedContact.photoUrl);\n    };\n    reader.readAsDataURL(selectedFile);\n\n    const formData = new FormData();\n    formData.append('photo', selectedFile);\n\n    axios.post('http://localhost:8000/api/upload-image', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    .then(response => {\n      this.editedContact.photo = response.data.temporaryPath;\n      this.editedContact.photoUrl = this.getPhotoUrl(response.data.temporaryPath); \n      console.log('photoUrl após upload:', this.editedContact.photoUrl);\n    })\n    .catch(error => {\n      console.error('Erro ao fazer upload da imagem:', error);\n      this.errorMessage = 'Erro ao fazer upload da imagem.';\n    });\n  }\n},\n  \nsubmitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact)\n        .then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n          this.resetData();\n        })\n        .catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n    },\n  }\n};\n\n</script>\n<style scope>\n.edit-contact-modal{\n  background-color: #FFF;\n  padding: 42px 14px; \n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  width: 555px;\n  height: 645px;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n}\n.edit-contact-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n  \n}s\n.form-top {\n  display: flex;\n  align-items: center; \n}\n.form-group label {\n  font-weight: bold;\n  margin-bottom: .5rem;\n}\n.my-custom-line-end {\n  height: 1px;\n  background-color: #e1e1e1ad;\n  margin: 0;\n  width: 100%;\n  margin-top: 10px;\n}\n.my-custom-line {\n  height: 1px;\n  background-color: #e1e1e1ad;\n  margin: 0;\n  width: 100%;\n  margin-top: 10px;\n}\n.photo-upload-btn i {\n  font-size: 2rem; \n}\n.photo-container-edit {\n  margin-top: 20px; \n  margin-right: 4rem; \n  margin-bottom: -102px; \n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n}\n\n.form-group input[type=\"text\"],\n.form-group input[type=\"email\"],\n.form-group input[type=\"tel\"] {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n}\n.form-row-photo {\n  display: flex;\n  gap: 1rem;\n  flex-direction: row;\n    flex-wrap: wrap;\n    align-content: flex-end;\n    justify-content: center;\n    margin-right: -104px;\n\n}\n.photo-preview, .photo-upload-btn {\n  width: 100px; \n  height: 100px; \n  border-radius: 50%; \n  background-color: #f2f2f2; \n  align-items: center;\n  justify-content: center;\n  overflow: hidden; \n  border: 2px solid #ddd; \n}\n.photo-upload-btn i {\n  font-size: 2rem; \n}\n\n.form-row {\n  display: flex;\n  gap: 1rem;\n}\n\n.form-actions {\n \n margin-top: 2rem;\n margin-left: 342px;\n}\n.form-actions button {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: -15px\n}\n.my-custom-line-end {\n  height: 1px;\n  background-color: #e1e1e1ad;\n  border: none;\n  margin: 0;\n  width: 100%;\n  margin-top: 10px;\n}\n.photo-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n}\n.form-actions button[type=\"submit\"] {\n  background-color:#321BDE;\n  color: white;\n\n  padding: 0px 17px;\n  font-family: 'Roboto', sans-serif; /* Fonte do texto */\n  line-height: 32px;\n  font-weight: 400;\n  font-style: normal;\n  border-radius:26px;\n}\n\n.form-actions button[type=\"button\"] {\n  background-color: #FFFFFF;\n  color: #505050;\n  font-size: 14px;\n  font-family: 'Roboto', sans-serif;\n  font-family: 'Roboto', sans-serif; /* Fonte do texto */\n  line-height: 32px;\n  font-weight: 400;\n  font-style: normal;\n}\n\n\n.form-actions button:hover {\n  opacity: 0.8;\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}