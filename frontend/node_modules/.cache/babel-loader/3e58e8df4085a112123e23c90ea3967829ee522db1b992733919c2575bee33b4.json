{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2423ca53\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Adicionar contato\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Campos do formulário para adicionar contato \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newContact.name = $event),\n    placeholder: \"Nome\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newContact.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newContact.email = $event),\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newContact.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newContact.phone = $event),\n    placeholder: \"Telefone\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newContact.phone]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newContact.address = $event),\n    placeholder: \"Endereço\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newContact.address]]), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */), _createCommentVNode(\" Campo para upload de foto \"), _hoisted_1], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","submitForm","_createCommentVNode","$event","$data","newContact","name","placeholder","required","email","phone","address","onChange","handleFileUpload","accept","_hoisted_1"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <!-- Campos do formulário para adicionar contato -->\n    <input type=\"text\" v-model=\"newContact.name\" placeholder=\"Nome\" required>\n    <input type=\"email\" v-model=\"newContact.email\" placeholder=\"Email\" required>\n    <input type=\"tel\" v-model=\"newContact.phone\" placeholder=\"Telefone\" required>\n    <input type=\"text\" v-model=\"newContact.address\" placeholder=\"Endereço\">\n    <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\"> <!-- Campo para upload de foto -->\n\n    <button type=\"submit\">Adicionar contato</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios'; // Importe o Axios aqui\n\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      newContact: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '', // Campo para o endereço\n        photo: null, // Armazenar a foto a ser enviada\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Fazer a requisição POST para adicionar o novo contato\n        const response = await axios.post('http://localhost:8000/api/clientes', this.newContact);\n\n        console.log('Resposta da API ao adicionar contato:', response.data);\n        \n        // Atualizar a lista de contatos após a adição\n        this.$emit('contactAdded', response.data); // Emitir evento para notificar componente pai\n        this.newContact = { name: '', email: '', phone: '', address: '', photo: null }; // Limpar o formulário após adicionar\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0]; // Obter o arquivo selecionado\n      this.newContact.photo = file; // Armazenar o arquivo na propriedade 'photo'\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Estilos para o AddContactForm */\n</style>\n"],"mappings":";;gEASIA,mBAAA,CAAgD;EAAxCC,IAAI,EAAC;AAAQ,GAAC,mBAAiB;;uBARzCC,mBAAA,CASO;IATAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADfC,cAAA,KAAAC,IAAA,KACyBC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BG,mBAAA,iDAAoD,E,gBACpDT,mBAAA,CAAyE;IAAlEC,IAAI,EAAC,MAAM;IAHtB,uBAAAG,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAGgCC,KAAA,CAAAC,UAAU,CAACC,IAAI,GAAAH,MAAA;IAAEI,WAAW,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAApCJ,KAAA,CAAAC,UAAU,CAACC,IAAI,E,mBAC3Cb,mBAAA,CAA4E;IAArEC,IAAI,EAAC,OAAO;IAJvB,uBAAAG,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAIiCC,KAAA,CAAAC,UAAU,CAACI,KAAK,GAAAN,MAAA;IAAEI,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAtCJ,KAAA,CAAAC,UAAU,CAACI,KAAK,E,mBAC7ChB,mBAAA,CAA6E;IAAtEC,IAAI,EAAC,KAAK;IALrB,uBAAAG,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAK+BC,KAAA,CAAAC,UAAU,CAACK,KAAK,GAAAP,MAAA;IAAEI,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAzCJ,KAAA,CAAAC,UAAU,CAACK,KAAK,E,mBAC3CjB,mBAAA,CAAuE;IAAhEC,IAAI,EAAC,MAAM;IANtB,uBAAAG,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMgCC,KAAA,CAAAC,UAAU,CAACM,OAAO,GAAAR,MAAA;IAAEI,WAAW,EAAC;iDAAhCH,KAAA,CAAAC,UAAU,CAACM,OAAO,E,GAC9ClB,mBAAA,CAA+D;IAAxDC,IAAI,EAAC,MAAM;IAAEkB,QAAM,EAAAf,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAa,gBAAA,IAAAb,QAAA,CAAAa,gBAAA,IAAAd,IAAA,CAAgB;IAAEe,MAAM,EAAC;qCAAWZ,mBAAA,+BAAkC,EAElGa,UAAgD,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}