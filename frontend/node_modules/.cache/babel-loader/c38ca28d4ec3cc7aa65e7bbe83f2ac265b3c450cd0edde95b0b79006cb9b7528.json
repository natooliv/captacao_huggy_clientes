{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      // Copia o contato original para evitar alterações indesejadas\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      this.errorMessage = ''; // Limpa a mensagem de erro ao fechar o modal\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editedContact.photo = file;\n      }\n    },\n    submitForm() {\n      this.errorMessage = ''; // Limpa a mensagem de erro ao enviar o formulário\n\n      if (!this.editedContact.name || !this.editedContact.email || !this.editedContact.phone || !this.editedContact.address) {\n        this.errorMessage = 'Todos os campos obrigatórios devem ser preenchidos.';\n        return;\n      }\n      const formData = new FormData();\n      Object.keys(this.editedContact).forEach(key => {\n        if (this.editedContact[key] !== this.contact[key]) {\n          formData.append(key, this.editedContact[key]);\n        }\n      });\n      if (formData.has('photo')) {\n        axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, formData).then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n        }).catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n      } else {\n        this.errorMessage = 'Nenhum campo foi modificado.';\n        this.showModal = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","errorMessage","methods","resetData","handleFileUpload","event","file","target","files","photo","submitForm","email","phone","address","formData","FormData","keys","forEach","key","append","has","put","id","then","response","console","log","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" ref=\"photo\" @change=\"handleFileUpload\" accept=\"image/*\">\n        <input type=\"text\" v-model=\"editedContact.photo\" placeholder=\"URL da foto (opcional)\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact }, // Copia o contato original para evitar alterações indesejadas\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.errorMessage = ''; // Limpa a mensagem de erro ao fechar o modal\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editedContact.photo = file;\n      }\n    },\n    submitForm() {\n      this.errorMessage = ''; // Limpa a mensagem de erro ao enviar o formulário\n\n      if (!this.editedContact.name || !this.editedContact.email || !this.editedContact.phone || !this.editedContact.address) {\n        this.errorMessage = 'Todos os campos obrigatórios devem ser preenchidos.';\n        return;\n      }\n\n      const formData = new FormData();\n\n      Object.keys(this.editedContact).forEach(key => {\n        if (this.editedContact[key] !== this.contact[key]) {\n          formData.append(key, this.editedContact[key]);\n        }\n      });\n\n      if (formData.has('photo')) {\n        axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, formData)\n          .then(response => {\n            console.log('Contato editado com sucesso:', response.data);\n            this.showModal = false;\n            this.$emit('update', response.data);\n          })\n          .catch(error => {\n            this.errorMessage = 'Erro ao editar contato.';\n            console.error('Erro ao editar contato:', error);\n          });\n      } else {\n        this.errorMessage = 'Nenhum campo foi modificado.';\n        this.showModal = false;\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Estilos para EditContactModal */\n</style>\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MAAE;MACpCO,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACH,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,CAACO,YAAW,GAAI,EAAE,EAAE;IAC1B,CAAC;IACDG,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,IAAI,CAACN,aAAa,CAACS,KAAI,GAAIH,IAAI;MACjC;IACF,CAAC;IACDI,UAAUA,CAAA,EAAG;MACX,IAAI,CAACT,YAAW,GAAI,EAAE,EAAE;;MAExB,IAAI,CAAC,IAAI,CAACD,aAAa,CAACR,IAAG,IAAK,CAAC,IAAI,CAACQ,aAAa,CAACW,KAAI,IAAK,CAAC,IAAI,CAACX,aAAa,CAACY,KAAI,IAAK,CAAC,IAAI,CAACZ,aAAa,CAACa,OAAO,EAAE;QACrH,IAAI,CAACZ,YAAW,GAAI,qDAAqD;QACzE;MACF;MAEA,MAAMa,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAE/BnB,MAAM,CAACoB,IAAI,CAAC,IAAI,CAAChB,aAAa,CAAC,CAACiB,OAAO,CAACC,GAAE,IAAK;QAC7C,IAAI,IAAI,CAAClB,aAAa,CAACkB,GAAG,MAAM,IAAI,CAACxB,OAAO,CAACwB,GAAG,CAAC,EAAE;UACjDJ,QAAQ,CAACK,MAAM,CAACD,GAAG,EAAE,IAAI,CAAClB,aAAa,CAACkB,GAAG,CAAC,CAAC;QAC/C;MACF,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACM,GAAG,CAAC,OAAO,CAAC,EAAE;QACzB7B,KAAK,CAAC8B,GAAG,CAAE,sCAAqC,IAAI,CAAC3B,OAAO,CAAC4B,EAAG,EAAC,EAAER,QAAQ,EACxES,IAAI,CAACC,QAAO,IAAK;UAChBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC1B,IAAI,CAAC;UAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;UACtB,IAAI,CAAC4B,KAAK,CAAC,QAAQ,EAAEH,QAAQ,CAAC1B,IAAI,CAAC;QACrC,CAAC,EACA8B,KAAK,CAACC,KAAI,IAAK;UACd,IAAI,CAAC5B,YAAW,GAAI,yBAAyB;UAC7CwB,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACN,OAAO;QACL,IAAI,CAAC5B,YAAW,GAAI,8BAA8B;QAClD,IAAI,CAACF,SAAQ,GAAI,KAAK;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}