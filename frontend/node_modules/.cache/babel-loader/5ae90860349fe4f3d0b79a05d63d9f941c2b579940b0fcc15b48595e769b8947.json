{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      photoFile: null,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      this.photoFile = null;\n      if (this.$refs.photo) {\n        this.$refs.photo.value = '';\n      }\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      this.photoFile = event.target.files[0];\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n      const formData = new FormData();\n      formData.append('photo', this.photoFile);\n      axios.post('http://localhost:8000/api/upload-image', formData).then(response => {\n        this.editedContact.photo = response.data.temporaryPath;\n        axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact).then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n          this.resetData();\n        }).catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n      }).catch(error => {\n        console.error('Erro ao fazer upload da imagem:', error);\n        this.errorMessage = 'Erro ao fazer upload da imagem.';\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","photoFile","errorMessage","methods","resetData","$refs","photo","value","handleFileUpload","event","target","files","submitForm","console","log","trim","email","phone","address","formData","FormData","append","post","then","response","temporaryPath","put","id","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"celular\">Celular:</label>\n        <input type=\"text\" id=\"celular\" v-model=\"editedContact.celular\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      \n      <div>\n        <label for=\"bairro\">Bairro:</label>\n        <input type=\"text\" id=\"bairro\" v-model=\"editedContact.bairro\" required>\n      </div>\n      <div>\n        <label for=\"estado\">Estado:</label>\n        <input type=\"text\" id=\"estado\" v-model=\"editedContact.estado\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (Upload):</label>\n        <input type=\"file\" id=\"photo\" @change=\"handleFileUpload\">\n        <!-- Mostrando o caminho temporário apenas para referência, você pode remover isso -->\n        <input type=\"hidden\" v-model=\"editedContact.photo\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      photoFile: null,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.photoFile = null;\n      if (this.$refs.photo) {\n        this.$refs.photo.value = '';\n      }\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      this.photoFile = event.target.files[0];\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('photo', this.photoFile);\n\n      axios.post('http://localhost:8000/api/upload-image', formData)\n        .then(response => {\n          this.editedContact.photo = response.data.temporaryPath;\n\n          axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact)\n            .then(response => {\n              console.log('Contato editado com sucesso:', response.data);\n              this.showModal = false;\n              this.$emit('update', response.data);\n              this.resetData();\n            })\n            .catch(error => {\n              this.errorMessage = 'Erro ao editar contato.';\n              console.error('Erro ao editar contato:', error);\n            });\n        })\n        .catch(error => {\n          console.error('Erro ao fazer upload da imagem:', error);\n          this.errorMessage = 'Erro ao fazer upload da imagem.';\n        });\n    }\n  }\n};\n</script>\n"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MAClCO,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACJ,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,CAACO,SAAQ,GAAI,IAAI;MACrB,IAAI,IAAI,CAACI,KAAK,CAACC,KAAK,EAAE;QACpB,IAAI,CAACD,KAAK,CAACC,KAAK,CAACC,KAAI,GAAI,EAAE;MAC7B;MACA,IAAI,CAACL,YAAW,GAAI,EAAE;IACxB,CAAC;IACDM,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACR,SAAQ,GAAIQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IACDC,UAAUA,CAAA,EAAG;MACXC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACZ,YAAW,GAAI,EAAE;MAEtB,IAAI,CAAC,IAAI,CAACF,aAAa,CAACR,IAAI,CAACuB,IAAI,CAAC,KAAK,CAAC,IAAI,CAACf,aAAa,CAACgB,KAAK,CAACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAACf,aAAa,CAACiB,KAAK,CAACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAACf,aAAa,CAACkB,OAAO,CAACH,IAAI,CAAC,CAAC,EAAE;QACjJ,IAAI,CAACb,YAAW,GAAI,mDAAmD;QACvE;MACF;MAEA,MAAMiB,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpB,SAAS,CAAC;MAExCV,KAAK,CAAC+B,IAAI,CAAC,wCAAwC,EAAEH,QAAQ,EAC1DI,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACxB,aAAa,CAACM,KAAI,GAAIkB,QAAQ,CAAC1B,IAAI,CAAC2B,aAAa;QAEtDlC,KAAK,CAACmC,GAAG,CAAE,sCAAqC,IAAI,CAAChC,OAAO,CAACiC,EAAG,EAAC,EAAE,IAAI,CAAC3B,aAAa,EAClFuB,IAAI,CAACC,QAAO,IAAK;UAChBX,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEU,QAAQ,CAAC1B,IAAI,CAAC;UAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;UACtB,IAAI,CAAC6B,KAAK,CAAC,QAAQ,EAAEJ,QAAQ,CAAC1B,IAAI,CAAC;UACnC,IAAI,CAACM,SAAS,CAAC,CAAC;QAClB,CAAC,EACAyB,KAAK,CAACC,KAAI,IAAK;UACd,IAAI,CAAC5B,YAAW,GAAI,yBAAyB;UAC7CW,OAAO,CAACiB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACN,CAAC,EACAD,KAAK,CAACC,KAAI,IAAK;QACdjB,OAAO,CAACiB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,IAAI,CAAC5B,YAAW,GAAI,iCAAiC;MACvD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}