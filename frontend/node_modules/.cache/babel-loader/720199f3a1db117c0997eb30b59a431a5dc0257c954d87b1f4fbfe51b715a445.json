{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'LoginForm',\n  methods: {\n    async loginWithHuggy() {\n      try {\n        // Faz a chamada para autenticar o usuário com o backend\n        const response = await fetch('http://localhost:8000/api/auth/google', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          // Autenticação bem-sucedida\n          console.log('Usuário autenticado com sucesso.');\n\n          // Redireciona para a rota \"dashboard\" usando o Vue Router\n          this.$router.push('/dashboard');\n        } else {\n          // Trata o erro de autenticação\n          console.error('Erro ao autenticar usuário:', response.statusText);\n        }\n      } catch (error) {\n        // Trata erros de rede ou outros erros\n        console.error('Erro ao autenticar usuário:', error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","methods","loginWithHuggy","response","fetch","method","headers","ok","console","log","$router","push","error","statusText","message"],"sources":["/home/natalia/teste_huggy_/huggy/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <h1 class=\"login-title\">Login</h1>\n    <button class=\"login-button\" @click=\"loginWithHuggy\">Fazer login com a Huggy</button>\n  </div>\n\n</template>\n\n<script>\nexport default {\n  name: 'LoginForm',\n  methods: {\n    async loginWithHuggy() {\n      try {\n        // Faz a chamada para autenticar o usuário com o backend\n        const response = await fetch('http://localhost:8000/api/auth/google', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (response.ok) {\n          // Autenticação bem-sucedida\n          console.log('Usuário autenticado com sucesso.');\n\n          // Redireciona para a rota \"dashboard\" usando o Vue Router\n          this.$router.push('/dashboard');\n        } else {\n          // Trata o erro de autenticação\n          console.error('Erro ao autenticar usuário:', response.statusText);\n        }\n      } catch (error) {\n        // Trata erros de rede ou outros erros\n        console.error('Erro ao autenticar usuário:', error.message);\n      }\n    }\n  }\n}\n</script>\n<style scoped>\n.login-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n\n.login-title {\n  margin-bottom: 20px; /* Espaçamento entre o título e o botão */\n  color: #262626; /* Cor do título */\n  font-size: 24px; /* Tamanho do texto para mobile */\n  font-family: 'Roboto', sans-serif;\n  line-height: 32px;\n  Width:60px;\n  Height:32px;\n  \n}\n\n.login-button {\n  background-color: #321BDE;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  padding: 9px 12px;\n  text-transform: uppercase;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  width: 100%;\n  max-width: 300px;\n}\n\n/* Estilos para tablets */\n@media (min-width: 600px) {\n  .login-title {\n    font-size: 28px; /* Tamanho do texto para tablets */\n  }\n  \n  .login-button {\n    padding: 12px 24px;\n  }\n}\n\n/* Estilos para desktops e telas maiores */\n@media (min-width: 1024px) {\n  .login-title {\n    font-size: 32px; /* Tamanho do texto para desktops */\n  }\n\n  .login-button {\n    padding: 14px 28px;\n  }\n}\n\n.login-button:hover {\n  background-color: #2a17b1;\n}\n</style>"],"mappings":";AASA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf;UACAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;;UAE/C;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL;UACAH,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAET,QAAQ,CAACU,UAAU,CAAC;QACnE;MACF,EAAE,OAAOD,KAAK,EAAE;QACd;QACAJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC7D;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}