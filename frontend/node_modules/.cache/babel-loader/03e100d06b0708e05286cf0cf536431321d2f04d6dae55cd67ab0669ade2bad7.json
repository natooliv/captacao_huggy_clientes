{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [],\n      showEditModal: false,\n      editedContact: {\n        id: null,\n        name: '',\n        email: '',\n        phone: ''\n      }\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.contacts.filter(contact => contact.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    fetchContacts() {\n      axios.get('http://localhost:8000/api/clientes').then(response => {\n        console.log('Resposta da API ao buscar clientes:', response.data);\n        if (Array.isArray(response.data)) {\n          this.contacts = response.data;\n        } else {\n          console.error('A resposta da API não é um array:', response.data);\n          this.contacts = [];\n        }\n      }).catch(error => {\n        console.error('Ocorreu um erro ao buscar os clientes:', error);\n        this.contacts = [];\n      });\n    },\n    editContact(contact) {\n      this.editedContact.id = contact.id;\n      this.editedContact.name = contact.name;\n      this.editedContact.email = contact.email;\n      this.editedContact.phone = contact.phone;\n      this.showEditModal = true;\n    },\n    saveEditedContact() {\n      // Aqui você pode enviar os dados do contato editado para a API\n      // e fechar o modal após a edição ser concluída\n      this.showEditModal = false;\n      this.resetEditedContact();\n    },\n    resetEditedContact() {\n      this.editedContact.id = null;\n      this.editedContact.name = '';\n      this.editedContact.email = '';\n      this.editedContact.phone = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","searchQuery","contacts","showEditModal","editedContact","id","email","phone","computed","filteredContacts","filter","contact","toLowerCase","includes","mounted","fetchContacts","methods","get","then","response","console","log","Array","isArray","error","catch","editContact","saveEditedContact","resetEditedContact"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"search\" placeholder=\"Buscar contato\" v-model=\"searchQuery\">\n    <!-- Tabela de contatos -->\n    <table v-if=\"searchQuery.length > 0\">\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Email</th>\n          <th>Telefone</th>\n          <th>Ações</th> <!-- Adicionei a coluna para as ações -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"contact in filteredContacts\" :key=\"contact.id\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.phone }}</td>\n          <td>\n            <button @click=\"editContact(contact)\">Editar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <!-- Modal de edição -->\n    <b-modal v-model=\"showEditModal\" title=\"Editar Contato\" @hidden=\"resetEditedContact\">\n      <form @submit.prevent=\"saveEditedContact\">\n        <div>\n          <label for=\"editName\">Nome:</label>\n          <input type=\"text\" id=\"editName\" v-model=\"editedContact.name\" required>\n        </div>\n        <div>\n          <label for=\"editEmail\">Email:</label>\n          <input type=\"email\" id=\"editEmail\" v-model=\"editedContact.email\" required>\n        </div>\n        <div>\n          <label for=\"editPhone\">Telefone:</label>\n          <input type=\"text\" id=\"editPhone\" v-model=\"editedContact.phone\" required>\n        </div>\n        <button type=\"submit\">Salvar</button>\n      </form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [],\n      showEditModal: false,\n      editedContact: {\n        id: null,\n        name: '',\n        email: '',\n        phone: ''\n      }\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.contacts.filter(contact =>\n        contact.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    fetchContacts() {\n      axios.get('http://localhost:8000/api/clientes')\n        .then(response => {\n          console.log('Resposta da API ao buscar clientes:', response.data);\n          if (Array.isArray(response.data)) {\n            this.contacts = response.data;\n          } else {\n            console.error('A resposta da API não é um array:', response.data);\n            this.contacts = [];\n          }\n        })\n        .catch(error => {\n          console.error('Ocorreu um erro ao buscar os clientes:', error);\n          this.contacts = [];\n        });\n    },\n    editContact(contact) {\n      this.editedContact.id = contact.id;\n      this.editedContact.name = contact.name;\n      this.editedContact.email = contact.email;\n      this.editedContact.phone = contact.phone;\n      this.showEditModal = true;\n    },\n    saveEditedContact() {\n      // Aqui você pode enviar os dados do contato editado para a API\n      // e fechar o modal após a edição ser concluída\n      this.showEditModal = false;\n      this.resetEditedContact();\n    },\n    resetEditedContact() {\n      this.editedContact.id = null;\n      this.editedContact.name = '';\n      this.editedContact.email = '';\n      this.editedContact.phone = '';\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para ContactList */\n</style>\n"],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE;QACbC,EAAE,EAAE,IAAI;QACRN,IAAI,EAAE,EAAE;QACRO,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACP,QAAQ,CAACQ,MAAM,CAACC,OAAM,IAChCA,OAAO,CAACZ,IAAI,CAACa,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACZ,WAAW,CAACW,WAAW,CAAC,CAAC,CACpE,CAAC;IACH;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACdjB,KAAK,CAACmB,GAAG,CAAC,oCAAoC,EAC3CC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,QAAQ,CAACnB,IAAI,CAAC;QACjE,IAAIsB,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACnB,IAAI,CAAC,EAAE;UAChC,IAAI,CAACE,QAAO,GAAIiB,QAAQ,CAACnB,IAAI;QAC/B,OAAO;UACLoB,OAAO,CAACI,KAAK,CAAC,mCAAmC,EAAEL,QAAQ,CAACnB,IAAI,CAAC;UACjE,IAAI,CAACE,QAAO,GAAI,EAAE;QACpB;MACF,CAAC,EACAuB,KAAK,CAACD,KAAI,IAAK;QACdJ,OAAO,CAACI,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,IAAI,CAACtB,QAAO,GAAI,EAAE;MACpB,CAAC,CAAC;IACN,CAAC;IACDwB,WAAWA,CAACf,OAAO,EAAE;MACnB,IAAI,CAACP,aAAa,CAACC,EAAC,GAAIM,OAAO,CAACN,EAAE;MAClC,IAAI,CAACD,aAAa,CAACL,IAAG,GAAIY,OAAO,CAACZ,IAAI;MACtC,IAAI,CAACK,aAAa,CAACE,KAAI,GAAIK,OAAO,CAACL,KAAK;MACxC,IAAI,CAACF,aAAa,CAACG,KAAI,GAAII,OAAO,CAACJ,KAAK;MACxC,IAAI,CAACJ,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDwB,iBAAiBA,CAAA,EAAG;MAClB;MACA;MACA,IAAI,CAACxB,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACyB,kBAAkB,CAAC,CAAC;IAC3B,CAAC;IACDA,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACxB,aAAa,CAACC,EAAC,GAAI,IAAI;MAC5B,IAAI,CAACD,aAAa,CAACL,IAAG,GAAI,EAAE;MAC5B,IAAI,CAACK,aAAa,CAACE,KAAI,GAAI,EAAE;MAC7B,IAAI,CAACF,aAAa,CAACG,KAAI,GAAI,EAAE;IAC/B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}