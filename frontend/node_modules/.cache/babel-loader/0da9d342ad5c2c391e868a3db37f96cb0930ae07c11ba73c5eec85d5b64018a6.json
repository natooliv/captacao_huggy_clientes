{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-002fd7de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nome\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Telefone\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"search\",\n    placeholder: \"Buscar contato\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createCommentVNode(\" Tabela de contatos \"), _createElementVNode(\"table\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredContacts, contact => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: contact.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(contact.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.phone), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.photo), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","type","placeholder","_cache","$event","$data","searchQuery","_createCommentVNode","_hoisted_1","_Fragment","_renderList","$options","filteredContacts","contact","key","id","_toDisplayString","name","email","phone","photo"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"search\" placeholder=\"Buscar contato\" v-model=\"searchQuery\">\n    <!-- Tabela de contatos -->\n    <table>\n      <tr>\n        <th>Nome</th>\n        <th>Email</th>\n        <th>Telefone</th>\n      </tr>\n      <tr v-for=\"contact in filteredContacts\" :key=\"contact.id\">\n        <td>{{ contact.name }}</td>\n        <td>{{ contact.email }}</td>\n        <td>{{ contact.phone }}</td>\n        <td>{{ contact.photo }}</td>\n       \n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [] // Esta lista será preenchida com dados da API\n    };\n  },\n  computed: {\n    filteredContacts() {\n      // Filtra os contatos com base na busca\n      return this.contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(this.searchQuery.toLowerCase());\n      });\n    }\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    fetchContacts() {\n      // Utiliza o URL do Ngrok para fazer a requisição à API\n      axios.get('https://9c19-2804-1b3-6901-129e-f94a-5754-7e79-e8df.ngrok-free.app/api/clientes')\n        .then(response => {\n          // Atualiza o estado dos contatos com a resposta da API\n          this.contacts = response.data;\n        })\n        .catch(error => {\n          // Trate erros aqui\n          console.error('Ocorreu um erro ao buscar os clientes:', error);\n        });\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Adicione seus estilos aqui */\n</style>\n"],"mappings":";;gEAKMA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBAPlBC,mBAAA,CAiBM,c,gBAhBJD,mBAAA,CAAwE;IAAjEE,IAAI,EAAC,QAAQ;IAACC,WAAW,EAAC,gBAAgB;IAFrD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE+DC,KAAA,CAAAC,WAAW,GAAAF,MAAA;iDAAXC,KAAA,CAAAC,WAAW,E,GACtEC,mBAAA,wBAA2B,EAC3BR,mBAAA,CAaQ,gBAZNS,UAIK,G,kBACLR,mBAAA,CAMKS,SAAA,QAhBXC,WAAA,CAU4BC,QAAA,CAAAC,gBAAgB,EAA3BC,OAAO;yBAAlBb,mBAAA,CAMK;MANoCc,GAAG,EAAED,OAAO,CAACE;QACpDhB,mBAAA,CAA2B,YAAAiB,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBlB,mBAAA,CAA4B,YAAAiB,gBAAA,CAArBH,OAAO,CAACK,KAAK,kBACpBnB,mBAAA,CAA4B,YAAAiB,gBAAA,CAArBH,OAAO,CAACM,KAAK,kBACpBpB,mBAAA,CAA4B,YAAAiB,gBAAA,CAArBH,OAAO,CAACO,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}