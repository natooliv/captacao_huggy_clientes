{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      showModal: false,\n      photoPreview: '',\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        celular: '',\n        address: '',\n        bairro: '',\n        estado: '',\n        photo: null\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        if (this.formData.photo instanceof File) {\n          const fileData = new FormData();\n          fileData.append('photo', this.formData.photo);\n          const uploadResponse = await axios.post('http://localhost:8000/api/upload-image', fileData);\n          this.formData.photo = uploadResponse.data.temporaryPath;\n        }\n        const response = await axios.post('http://localhost:8000/api/clientes', this.formData);\n        console.log('Resposta da API:', response.data);\n        this.resetForm();\n        this.$emit('contactAdded', response.data);\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n    triggerFileUpload() {\n      this.$refs.photoInput.click();\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.photo = file;\n        this.photoPreview = URL.createObjectURL(file);\n      }\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        celular: '',\n        bairro: '',\n        estado: '',\n        phone: '',\n        address: '',\n        photo: null\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","showModal","photoPreview","formData","email","phone","celular","address","bairro","estado","photo","methods","submitForm","File","fileData","FormData","append","uploadResponse","post","temporaryPath","response","console","log","resetForm","$emit","error","triggerFileUpload","$refs","photoInput","click","handleFileUpload","event","file","target","files","URL","createObjectURL"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <div class=\"add-contact-modal\">\n    <h2>Adicionar novo contato</h2>\n    <form @submit.prevent=\"submitForm\" class=\"add-contact-form\">\n      \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <div class=\"photo-container\">\n            <!-- Área de preview da foto -->\n            <div v-if=\"formData.photo\" class=\"photo-preview\" :style=\"{ backgroundImage: 'url(' + photoPreview + ')' }\"></div>\n            \n            <!-- Botão de upload da foto -->\n            <div class=\"photo-upload-btn\" @click=\"triggerFileUpload\">\n              <i class=\"fa fa-camera\"></i>\n              <input type=\"file\" id=\"photo\" ref=\"photoInput\" @change=\"handleFileUpload\" accept=\"image/*\" hidden>\n            </div>\n          </div>\n       \n\n        <div class=\"form-group\">\n          <label for=\"name\">Nome</label>\n          <input type=\"text\" id=\"name\" v-model=\"formData.name\" placeholder=\"Nome completo\" required>\n        </div>\n      \n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" v-model=\"formData.email\" placeholder=\"Email\" required>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"phone\">Telefone</label>\n        <input type=\"tel\" id=\"phone\" v-model=\"formData.phone\" placeholder=\"Telefone\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"celular\">Celular</label>\n        <input type=\"tel\" id=\"celular\" v-model=\"formData.celular\" placeholder=\"Celular\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"address\">Endereço</label>\n        <input type=\"text\" id=\"address\" v-model=\"formData.address\" placeholder=\"Endereço\">\n      </div>\n    \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"bairro\">Bairro</label>\n          <input type=\"text\" id=\"bairro\" v-model=\"formData.bairro\" placeholder=\"Bairro\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"estado\">Estado</label>\n          <input type=\"text\" id=\"estado\" v-model=\"formData.estado\" placeholder=\"Estado\">\n        </div>\n      </div>\n    </div>\n</div>\n\n\n      <div class=\"form-actions\">\n        <button type=\"button\" @click=\"resetForm\">Cancelar</button>\n        <button type=\"submit\">Salvar</button>\n      </div>\n    </form>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      showModal: false,\n      photoPreview: '',\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        celular: '',\n        address: '',\n        bairro: '',\n        estado: '',\n        photo: null\n      },\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        if (this.formData.photo instanceof File) {\n          const fileData = new FormData();\n          fileData.append('photo', this.formData.photo);\n          const uploadResponse = await axios.post('http://localhost:8000/api/upload-image', fileData);\n          this.formData.photo = uploadResponse.data.temporaryPath;\n        }\n\n        const response = await axios.post('http://localhost:8000/api/clientes', this.formData);\n        console.log('Resposta da API:', response.data);\n        this.resetForm();\n        this.$emit('contactAdded', response.data);\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n      triggerFileUpload() {\n      this.$refs.photoInput.click();\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.photo = file;\n        this.photoPreview = URL.createObjectURL(file);\n      }\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        celular: '',\n        bairro: '',\n        estado: '',\n        phone: '',\n        address: '',\n        photo: null,\n      };\n    },\n  }\n};\n</script>\n<style scoped>\n.add-contact-modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center; /* Centraliza verticalmente */\n  justify-content: center; /* Centraliza horizontalmente */\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 1000; /* Garante que o modal fique acima de outros conteúdos */\n}\n\n.add-contact-modal {\n  background-color: #FFF;\n  padding: 50px;\n  border-radius: 12px; /* Raio da borda */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  width: 710px; \n  height: 750px;/* Largura máxima do modal */\n  display: flex;\n  flex-direction: column;\n \n  transform: translateY(-50%); /* Ajuste para centralização vertical */\n  position: absolute;\n  top: 50%; /* Posição vertical no centro */\n  left: 50%; /* Posição horizontal no centro */\n  transform: translate(-50%, -50%); /* Desloca para cima e para a esquerda pela metade da própria altura e largura do modal */\n}\n.form-top {\n  display: flex;\n  align-items: center; /* Alinha verticalmente */\n}\n\n.photo-container {\n  margin-right: 1rem; /* Espaço entre a foto e o campo do nome */\n}\n\n.photo-preview, .photo-upload-btn {\n  width: 100px; /* Tamanho do círculo */\n  height: 100px; /* Tamanho do círculo */\n  border-radius: 50%; /* Faz o círculo */\n  background-color: #f2f2f2; /* Cor de fundo se nenhuma foto estiver presente */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden; /* Garante que a foto não saia do círculo */\n  border: 2px solid #ddd; /* Borda do círculo */\n}\n\n.photo-upload-btn i {\n  font-size: 2rem; /* Tamanho do ícone de câmera */\n}\n.add-contact-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group label {\n  font-weight: bold;\n  margin-bottom: .5rem;\n  display:flex;\n  font-size: 12px;\n}\n#name {\n  width: 45%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#email {\n  width: 45%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#phone {\n  width: 35%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 08px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#celular {\n  width: 35%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#address {\n  width: 65%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#bairro {\n  width: 45%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#estado {\n  width: 35%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n\n\n.form-row {\n  display: flex;\n  gap: 1rem;\n}\n\n.form-row .form-group {\n  flex: 1;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n}\n\n.form-actions button {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.form-actions button[type=\"submit\"] {\n  background-color: #5cb85c;\n  color: white;\n}\n\n.form-actions button[type=\"button\"] {\n  background-color: #f0f0f0;\n  color: #333;\n}\n\n.form-actions button:hover {\n  opacity: 0.8;\n}\n</style>\n"],"mappings":";;;AAoEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE;QACRJ,IAAI,EAAE,EAAE;QACRK,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,IAAI,IAAI,CAACT,QAAQ,CAACO,KAAI,YAAaG,IAAI,EAAE;UACvC,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;UAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACb,QAAQ,CAACO,KAAK,CAAC;UAC7C,MAAMO,cAAa,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,wCAAwC,EAAEJ,QAAQ,CAAC;UAC3F,IAAI,CAACX,QAAQ,CAACO,KAAI,GAAIO,cAAc,CAACjB,IAAI,CAACmB,aAAa;QACzD;QAEA,MAAMC,QAAO,GAAI,MAAMtB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,EAAE,IAAI,CAACf,QAAQ,CAAC;QACtFkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAACpB,IAAI,CAAC;QAC9C,IAAI,CAACuB,SAAS,CAAC,CAAC;QAChB,IAAI,CAACC,KAAK,CAAC,cAAc,EAAEJ,QAAQ,CAACpB,IAAI,CAAC;MAC3C,EAAE,OAAOyB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACCC,iBAAiBA,CAAA,EAAG;MACpB,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,KAAK,CAAC,CAAC;IAC/B,CAAC;IACDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,IAAI,CAAC7B,QAAQ,CAACO,KAAI,GAAIsB,IAAI;QAC1B,IAAI,CAAC9B,YAAW,GAAIiC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MAC/C;IACF,CAAC;IACDT,SAASA,CAAA,EAAG;MACV,IAAI,CAACpB,QAAO,GAAI;QACdJ,IAAI,EAAE,EAAE;QACRK,KAAK,EAAE,EAAE;QACTE,OAAO,EAAE,EAAE;QACXE,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVJ,KAAK,EAAE,EAAE;QACTE,OAAO,EAAE,EAAE;QACXG,KAAK,EAAE;MACT,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}