{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2423ca53\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  type: \"submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Campos do formulário para adicionar ou editar contato \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.name = $event),\n    placeholder: \"Nome\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.email = $event),\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.phone = $event),\n    placeholder: \"Telefone\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.phone]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.address = $event),\n    placeholder: \"Endereço\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.address]]), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */), _createCommentVNode(\" Campo para upload de foto \"), _createElementVNode(\"button\", _hoisted_1, _toDisplayString($props.isEditing ? 'Salvar' : 'Adicionar') + \" contato\", 1 /* TEXT */)], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","submitForm","_createCommentVNode","_createElementVNode","$event","$data","formData","name","placeholder","required","email","phone","address","onChange","handleFileUpload","accept","_hoisted_1","_toDisplayString","$props","isEditing"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <!-- Campos do formulário para adicionar ou editar contato -->\n    <input type=\"text\" v-model=\"formData.name\" placeholder=\"Nome\" required>\n    <input type=\"email\" v-model=\"formData.email\" placeholder=\"Email\" required>\n    <input type=\"tel\" v-model=\"formData.phone\" placeholder=\"Telefone\" required>\n    <input type=\"text\" v-model=\"formData.address\" placeholder=\"Endereço\">\n    <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\"> <!-- Campo para upload de foto -->\n\n    <button type=\"submit\">{{ isEditing ? 'Salvar' : 'Adicionar' }} contato</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AddContactForm',\n  props: {\n    contact: Object, // Propriedade para receber o contato ao editar (opcional)\n    isEditing: Boolean, // Propriedade para indicar se é edição ou adição\n  },\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null, // Armazenar a foto a ser enviada\n      },\n    };\n  },\n  computed: {\n    contactId() {\n      return this.contact ? this.contact.id : null;\n    },\n  },\n  methods: {\n    async submitForm() {\n  try {\n    const formData = new FormData();\n    formData.append('name', this.formData.name);\n    formData.append('email', this.formData.email);\n    formData.append('phone', this.formData.phone);\n    formData.append('address', this.formData.address);\n\n    // Adicionar o arquivo de imagem ao FormData somente se um arquivo foi selecionado\n    if (this.formData.photo instanceof File) {\n      formData.append('photo', this.formData.photo);\n    }\n\n    const endpoint = this.isEditing ? `http://localhost:8000/api/clientes/${this.contactId}` : 'http://localhost:8000/api/clientes';\n    const method = this.isEditing ? 'put' : 'post';\n\n    const response = await axios[method](endpoint, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    console.log('Resposta da API:', response.data);\n\n    this.resetForm();\n    this.$emit('actionCompleted', response.data);\n  } catch (error) {\n    console.error('Erro ao adicionar/editar contato:', error);\n  }\n\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.photo = file; // Armazenar o arquivo na propriedade 'photo'\n      }\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null,\n      };\n    },\n  },\n  mounted() {\n    // Preencher o formulário com os dados do contato ao editar\n    if (this.isEditing && this.contact) {\n      this.formData.name = this.contact.name;\n      this.formData.email = this.contact.email;\n      this.formData.phone = this.contact.phone;\n      this.formData.address = this.contact.address;\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para o ContactForm */\n</style>\n"],"mappings":";;;EASYA,IAAI,EAAC;AAAQ;;uBARvBC,mBAAA,CASO;IATAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADfC,cAAA,KAAAC,IAAA,KACyBC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BG,mBAAA,2DAA8D,E,gBAC9DC,mBAAA,CAAuE;IAAhET,IAAI,EAAC,MAAM;IAHtB,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAGgCC,KAAA,CAAAC,QAAQ,CAACC,IAAI,GAAAH,MAAA;IAAEI,WAAW,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAlCJ,KAAA,CAAAC,QAAQ,CAACC,IAAI,E,mBACzCJ,mBAAA,CAA0E;IAAnET,IAAI,EAAC,OAAO;IAJvB,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAIiCC,KAAA,CAAAC,QAAQ,CAACI,KAAK,GAAAN,MAAA;IAAEI,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAApCJ,KAAA,CAAAC,QAAQ,CAACI,KAAK,E,mBAC3CP,mBAAA,CAA2E;IAApET,IAAI,EAAC,KAAK;IALrB,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAK+BC,KAAA,CAAAC,QAAQ,CAACK,KAAK,GAAAP,MAAA;IAAEI,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAvCJ,KAAA,CAAAC,QAAQ,CAACK,KAAK,E,mBACzCR,mBAAA,CAAqE;IAA9DT,IAAI,EAAC,MAAM;IANtB,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMgCC,KAAA,CAAAC,QAAQ,CAACM,OAAO,GAAAR,MAAA;IAAEI,WAAW,EAAC;iDAA9BH,KAAA,CAAAC,QAAQ,CAACM,OAAO,E,GAC5CT,mBAAA,CAA+D;IAAxDT,IAAI,EAAC,MAAM;IAAEmB,QAAM,EAAAhB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAc,gBAAA,IAAAd,QAAA,CAAAc,gBAAA,IAAAf,IAAA,CAAgB;IAAEgB,MAAM,EAAC;qCAAWb,mBAAA,+BAAkC,EAElGC,mBAAA,CAA+E,UAA/Ea,UAA+E,EAAAC,gBAAA,CAAtDC,MAAA,CAAAC,SAAS,6BAA4B,UAAQ,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}