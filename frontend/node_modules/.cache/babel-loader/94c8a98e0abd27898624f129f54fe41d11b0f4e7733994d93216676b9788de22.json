{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"photo\"\n}, \"Foto (URL ou Upload):\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Salvar\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_modal = _resolveComponent(\"b-modal\");\n  return _openBlock(), _createBlock(_component_b_modal, null, {\n    default: _withCtx(() => [_createElementVNode(\"form\", {\n      onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n    }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editedContact.photo = $event),\n      placeholder: \"URL da foto (opcional)\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedContact.photo]]), _createElementVNode(\"input\", {\n      type: \"file\",\n      onChange: _cache[1] || (_cache[1] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n    }, null, 32 /* NEED_HYDRATION */)]), _hoisted_2], 32 /* NEED_HYDRATION */)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createBlock","_component_b_modal","default","_withCtx","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_1","$event","$data","editedContact","photo","placeholder","onChange","handleFileUpload","_hoisted_2","_"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"text\" v-model=\"editedContact.photo\" placeholder=\"URL da foto (opcional)\">\n        <input type=\"file\" @change=\"handleFileUpload\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      selectedFile: null,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.selectedFile = null;\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('name', this.editedContact.name);\n      formData.append('email', this.editedContact.email);\n      formData.append('phone', this.editedContact.phone);\n      formData.append('address', this.editedContact.address);\n      if (this.selectedFile) {\n        formData.append('photo', this.selectedFile);\n      } else if (this.editedContact.photo) {\n        formData.append('photo', this.editedContact.photo);\n      }\n\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      })\n      .then(response => {\n        console.log('Contato editado com sucesso:', response.data);\n        this.showModal = false;\n        this.$emit('update', response.data);\n        this.resetData();\n      })\n      .catch(error => {\n        this.errorMessage = 'Erro ao editar contato.';\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};\n</script>\n"],"mappings":";gCAIQA,mBAAA,CAAgD;EAAzCC,GAAG,EAAC;AAAO,GAAC,uBAAqB;gCAI1CD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAPhCC,YAAA,CASUC,kBAAA;IAVZC,OAAA,EAAAC,QAAA,CAEI,MAOO,CAPPN,mBAAA,CAOO;MAPAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFjBC,cAAA,KAAAC,IAAA,KAE2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;QAC/BV,mBAAA,CAIM,cAHJa,UAAgD,E,gBAChDb,mBAAA,CAAsF;MAA/EE,IAAI,EAAC,MAAM;MAL1B,uBAAAM,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAKoCC,KAAA,CAAAC,aAAa,CAACC,KAAK,GAAAH,MAAA;MAAEI,WAAW,EAAC;mDAAjCH,KAAA,CAAAC,aAAa,CAACC,KAAK,E,GAC/CjB,mBAAA,CAA8C;MAAvCE,IAAI,EAAC,MAAM;MAAEiB,QAAM,EAAAX,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAS,gBAAA,IAAAT,QAAA,CAAAS,gBAAA,IAAAV,IAAA,CAAgB;yCAE9CW,UAAqC,C;IAR3CC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}