{"ast":null,"code":"import axios from 'axios'; // Importe o Axios aqui\n\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      newContact: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        // Campo para o endereço\n        photo: null // Armazenar a foto a ser enviada\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const formData = new FormData(); // Criar um objeto FormData para enviar o formulário\n        formData.append('name', this.newContact.name);\n        formData.append('email', this.newContact.email);\n        formData.append('phone', this.newContact.phone);\n        formData.append('address', this.newContact.address);\n        formData.append('photo', this.newContact.photo); // Adicionar o arquivo de imagem ao FormData\n\n        const response = await axios.post('http://localhost:8000/api/clientes', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // Definir o tipo de conteúdo como multipart/form-data para upload de arquivo\n          }\n        });\n        console.log('Resposta da API ao adicionar contato:', response.data);\n\n        // Atualizar a lista de contatos após a adição\n        this.$emit('contactAdded', response.data); // Emitir evento para notificar componente pai\n        this.newContact = {\n          name: '',\n          email: '',\n          phone: '',\n          address: '',\n          photo: null\n        }; // Limpar o formulário após adicionar\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0]; // Obter o arquivo selecionado\n      this.newContact.photo = file; // Armazenar o arquivo na propriedade 'photo'\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","newContact","email","phone","address","photo","methods","submitForm","formData","FormData","append","response","post","headers","console","log","$emit","error","handleFileUpload","event","file","target","files"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <!-- Campos do formulário para adicionar contato -->\n    <input type=\"text\" v-model=\"newContact.name\" placeholder=\"Nome\" required>\n    <input type=\"email\" v-model=\"newContact.email\" placeholder=\"Email\" required>\n    <input type=\"tel\" v-model=\"newContact.phone\" placeholder=\"Telefone\" required>\n    <input type=\"text\" v-model=\"newContact.address\" placeholder=\"Endereço\">\n    <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\"> <!-- Campo para upload de foto -->\n\n    <button type=\"submit\">Adicionar contato</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios'; // Importe o Axios aqui\n\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      newContact: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '', // Campo para o endereço\n        photo: null, // Armazenar a foto a ser enviada\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const formData = new FormData(); // Criar um objeto FormData para enviar o formulário\n        formData.append('name', this.newContact.name);\n        formData.append('email', this.newContact.email);\n        formData.append('phone', this.newContact.phone);\n        formData.append('address', this.newContact.address);\n        formData.append('photo', this.newContact.photo); // Adicionar o arquivo de imagem ao FormData\n\n        const response = await axios.post('http://localhost:8000/api/clientes', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data', // Definir o tipo de conteúdo como multipart/form-data para upload de arquivo\n          },\n        });\n\n        console.log('Resposta da API ao adicionar contato:', response.data);\n\n        // Atualizar a lista de contatos após a adição\n        this.$emit('contactAdded', response.data); // Emitir evento para notificar componente pai\n        this.newContact = { name: '', email: '', phone: '', address: '', photo: null }; // Limpar o formulário após adicionar\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0]; // Obter o arquivo selecionado\n      this.newContact.photo = file; // Armazenar o arquivo na propriedade 'photo'\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Estilos para o AddContactForm */\n</style>\n"],"mappings":"AAcA,OAAOA,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QAAE;QACbC,KAAK,EAAE,IAAI,CAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC,EAAE;QACjCD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACT,UAAU,CAACF,IAAI,CAAC;QAC7CS,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,UAAU,CAACC,KAAK,CAAC;QAC/CM,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,UAAU,CAACE,KAAK,CAAC;QAC/CK,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACT,UAAU,CAACG,OAAO,CAAC;QACnDI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,UAAU,CAACI,KAAK,CAAC,EAAE;;QAEjD,MAAMM,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAEJ,QAAQ,EAAE;UAChFK,OAAO,EAAE;YACP,cAAc,EAAE,qBAAqB,CAAE;UACzC;QACF,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEJ,QAAQ,CAACX,IAAI,CAAC;;QAEnE;QACA,IAAI,CAACgB,KAAK,CAAC,cAAc,EAAEL,QAAQ,CAACX,IAAI,CAAC,EAAE;QAC3C,IAAI,CAACC,UAAS,GAAI;UAAEF,IAAI,EAAE,EAAE;UAAEG,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAK,CAAC,EAAE;MAClF,EAAE,OAAOY,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACpC,IAAI,CAACrB,UAAU,CAACI,KAAI,GAAIe,IAAI,EAAE;IAChC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}