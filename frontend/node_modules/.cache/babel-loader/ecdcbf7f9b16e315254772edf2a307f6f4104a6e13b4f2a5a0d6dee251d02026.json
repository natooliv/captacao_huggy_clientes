{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [] // Esta lista será preenchida com dados da API\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.contacts.filter(contact => contact.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    fetchContacts() {\n      axios.get('https://9c19-2804-1b3-6901-129e-f94a-5754-7e79-e8df.ngrok-free.app/api/clientes').then(response => {\n        this.contacts = response.data;\n      }).catch(error => {\n        console.error('Ocorreu um erro ao buscar os clientes:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","searchQuery","contacts","computed","filteredContacts","filter","contact","toLowerCase","includes","mounted","fetchContacts","methods","get","then","response","catch","error","console"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"search\" placeholder=\"Buscar contato\" v-model=\"searchQuery\">\n    <!-- Tabela de contatos -->\n    <table>\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Email</th>\n          <th>Telefone</th>\n          <!-- Adicione outras colunas conforme necessário -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"contact in filteredContacts\" :key=\"contact.id\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.phone }}</td>\n          <!-- Adicione outras células de dados conforme necessário -->\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [] // Esta lista será preenchida com dados da API\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.contacts.filter(contact =>\n        contact.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    }\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    fetchContacts() {\n      axios.get('https://9c19-2804-1b3-6901-129e-f94a-5754-7e79-e8df.ngrok-free.app/api/clientes')\n        .then(response => {\n          this.contacts = response.data;\n        })\n        .catch(error => {\n          console.error('Ocorreu um erro ao buscar os clientes:', error);\n        });\n    }\n  }\n}\n</script>\n"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAC,CAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,OAAM,IAChCA,OAAO,CAACP,IAAI,CAACQ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACP,WAAW,CAACM,WAAW,CAAC,CAAC,CACpE,CAAC;IACH;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACdZ,KAAK,CAACc,GAAG,CAAC,iFAAiF,EACxFC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACZ,QAAO,GAAIY,QAAQ,CAACd,IAAI;MAC/B,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACN;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}