{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      showModal: false,\n      photoPreview: '',\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        celular: '',\n        address: '',\n        bairro: '',\n        estado: '',\n        photo: null\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Se não há uma foto, mas há um nome, gera as iniciais como Blob\n        if (!this.formData.photo && this.formData.name) {\n          const initialsURL = await this.generateInitials();\n          this.formData.photo = initialsURL;\n          this.photoPreview = initialsURL;\n        }\n\n        // Resto do seu código de envio...\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n    triggerFileUpload() {\n      this.$refs.photoInput.click();\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        celular: '',\n        bairro: '',\n        estado: '',\n        phone: '',\n        address: '',\n        photo: null\n      };\n    },\n    generateInitials() {\n      const canvas = document.createElement('canvas');\n      canvas.width = 100;\n      canvas.height = 100;\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = '#f2f2f2';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = '#333';\n      ctx.font = 'bold 24px Arial';\n      const initials = this.formData.name.split(' ').map(word => word[0]?.toUpperCase() || '').join('');\n      ctx.fillText(initials, canvas.width / 2 - ctx.measureText(initials).width / 2, canvas.height / 2 + 12);\n\n      // Resolva a promise com a URL do Blob\n      return new Promise(resolve => {\n        canvas.toBlob(blob => {\n          const url = URL.createObjectURL(blob);\n          resolve(url);\n        });\n      });\n    }\n  },\n  getPhotoStyle() {\n    if (this.photoPreview) {\n      // Caso haja uma pré-visualização definida\n      return {\n        backgroundImage: `url(${this.photoPreview})`,\n        backgroundSize: 'cover',\n        borderRadius: '50%',\n        width: '100px',\n        height: '100px'\n      };\n    }\n    // Se não há foto nem nome, não exibe nada.\n    return {\n      display: 'none'\n    };\n  },\n  handleFileUpload(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.formData.photo = file;\n      this.photoPreview = URL.createObjectURL(file);\n    }\n  },\n  watch: {\n    'formData.name'(newName) {\n      if (newName && !this.formData.photo) {\n        this.photoPreview = this.generateInitials();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","showModal","photoPreview","formData","email","phone","celular","address","bairro","estado","photo","methods","submitForm","initialsURL","generateInitials","error","console","triggerFileUpload","$refs","photoInput","click","resetForm","canvas","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","font","initials","split","map","word","toUpperCase","join","fillText","measureText","Promise","resolve","toBlob","blob","url","URL","createObjectURL","getPhotoStyle","backgroundImage","backgroundSize","borderRadius","display","handleFileUpload","event","file","target","files","watch","formData.name","newName"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <div class=\"add-contact-modal\">\n    <h2 class=\"title\">Adicionar novo contato</h2>\n    <div>\n    <hr class=\"my-custom-line\">\n  </div>\n    <form @submit.prevent=\"submitForm\" class=\"add-contact-form\">\n      <div>\n        <div>\n          <div class=\"form-row-photo\">\n  <div class=\"form-group\">\n    <div class=\"photo-container\">\n      <!-- Área de pré-visualização da foto ou iniciais -->\n      <div v-if=\"photoPreview\" class=\"photo-preview\" :style=\"getPhotoStyle\"></div>\n      <!-- Botão de upload da foto -->\n      <div v-else class=\"photo-upload-btn\" @click=\"triggerFileUpload\">\n        <i class=\"fa fa-camera\"></i>\n        <input type=\"file\" id=\"photo\" ref=\"photoInput\" @change=\"handleFileUpload\" accept=\"image/*\" hidden>\n      </div>\n    </div>\n  </div>\n</div>\n          <div>\n        <div class=\"form-group\">\n          <label for=\"name\">Nome</label>\n          <input type=\"text\" id=\"name\" v-model=\"formData.name\" placeholder=\"Nome completo\" required>\n        </div>\n      \n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" v-model=\"formData.email\" placeholder=\"Email\" required>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"phone\">Telefone</label>\n        <input type=\"tel\" id=\"phone\" v-model=\"formData.phone\" placeholder=\"Telefone\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"celular\">Celular</label>\n        <input type=\"tel\" id=\"celular\" v-model=\"formData.celular\" placeholder=\"Celular\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"address\">Endereço</label>\n        <input type=\"text\" id=\"address\" v-model=\"formData.address\" placeholder=\"Endereço\">\n      </div>\n    \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"bairro\">Bairro</label>\n          <input type=\"text\" id=\"bairro\" v-model=\"formData.bairro\" placeholder=\"Bairro\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"estado\">Estado</label>\n          <input type=\"text\" id=\"estado\" v-model=\"formData.estado\" placeholder=\"Estado\">\n        </div>\n      </div>\n      </div>\n    </div>\n</div>\n<div>\n    <hr class=\"my-custom-line-end\">\n  </div>\n\n      <div class=\"form-actions\">\n        <button type=\"button\" @click=\"resetForm\">Cancelar</button>\n        <button type=\"submit\">Salvar</button>\n      </div>\n    </form>\n  </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      showModal: false,\n      photoPreview: '',\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        celular: '',\n        address: '',\n        bairro: '',\n        estado: '',\n        photo: null\n      },\n    };\n  },\n  methods: {\n    async submitForm() {\n  try {\n    // Se não há uma foto, mas há um nome, gera as iniciais como Blob\n    if (!this.formData.photo && this.formData.name) {\n      const initialsURL = await this.generateInitials();\n      this.formData.photo = initialsURL;\n      this.photoPreview = initialsURL;\n    }\n    \n    // Resto do seu código de envio...\n  } catch (error) {\n    console.error('Erro ao adicionar contato:', error);\n  }\n},\n\n\n      triggerFileUpload() {\n      this.$refs.photoInput.click();\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        celular: '',\n        bairro: '',\n        estado: '',\n        phone: '',\n        address: '',\n        photo: null,\n      };\n    },\n    generateInitials() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 100;\n  canvas.height = 100;\n  const ctx = canvas.getContext('2d');\n  ctx.fillStyle = '#f2f2f2';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = '#333';\n  ctx.font = 'bold 24px Arial';\n  const initials = this.formData.name.split(' ')\n    .map((word) => word[0]?.toUpperCase() || '')\n    .join('');\n  ctx.fillText(initials, canvas.width / 2 - ctx.measureText(initials).width / 2, canvas.height / 2 + 12);\n  \n  // Resolva a promise com a URL do Blob\n  return new Promise((resolve) => {\n    canvas.toBlob((blob) => {\n      const url = URL.createObjectURL(blob);\n      resolve(url);\n    });\n  });\n},\n},\n  getPhotoStyle() {\n    if (this.photoPreview) {\n      // Caso haja uma pré-visualização definida\n      return {\n        backgroundImage: `url(${this.photoPreview})`,\n        backgroundSize: 'cover',\n        borderRadius: '50%',\n        width: '100px',\n        height: '100px'\n      };\n    }\n    // Se não há foto nem nome, não exibe nada.\n    return { display: 'none' };\n  },\n  handleFileUpload(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.formData.photo = file;\n      this.photoPreview = URL.createObjectURL(file);\n    }\n  },\n    watch: {\n  'formData.name'(newName) {\n    if (newName && !this.formData.photo) {\n      this.photoPreview = this.generateInitials();\n    }\n  },\n},\n};\n</script>\n<style>\n\n.add-contact-modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center; /* Centraliza verticalmente */\n  justify-content: center; /* Centraliza horizontalmente */\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 1000; /* Garante que o modal fique acima de outros conteúdos */\n}\n.title{\n  display:flex\n}\n\n.add-contact-modal {\n  background-color: #FFF;\n  padding: 42px 14px; /* Ajusta o padding para que não afete a largura do <hr> */\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  width: 555px;\n  height: 690px;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box; /* Adicionado para incluir o padding no cálculo da largura */\n  position: fixed; /* Mudado de absolute para fixed para garantir a posição */\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.form-top {\n  display: flex;\n  align-items: center; \n}\n\n.photo-container {\n  margin-top: 20px; /* Ajuste a margem conforme necessário */\n  margin-right: -13rem; \n  margin-bottom: -102px; \n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n}\n\n\n\n.photo-preview, .photo-upload-btn {\n  width: 100px; /* Tamanho do círculo */\n  height: 100px; /* Tamanho do círculo */\n  border-radius: 50%; /* Faz o círculo */\n  background-color: #f2f2f2; /* Cor de fundo se nenhuma foto estiver presente */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden; /* Garante que a foto não saia do círculo */\n  border: 2px solid #ddd; /* Borda do círculo */\n}\n\n.photo-upload-btn i {\n  font-size: 2rem; /* Tamanho do ícone de câmera */\n}\n.add-contact-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group label {\n  font-weight: bold;\n  margin-bottom: .5rem;\n  display:flex;\n  font-size: 12px;\n}\n#name {\n  width: 45%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#email {\n  width: 45%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#phone {\n  width: 35%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 08px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#celular {\n  width: 35%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#address {\n  width: 65%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n#bairro {\n  width: 45%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n.my-custom-line {\n  height: 1px;\n  background-color: #e1e1e1ad; /* A cor que você quer que a linha tenha */\n  border: none;\n  margin: 0;\n  width: 100%;\n}\n.my-custom-line-end {\n  height: 1px;\n  background-color: #e1e1e1ad; /* A cor que você quer que a linha tenha */\n  border: none;\n  margin: 0;\n  width: 100%;\n  margin-top: 10px;\n}\n\n\n#estado {\n  width: 35%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  margin-bottom: 0.5rem;\n  display:flex;\n\n}\n\n\n.form-row {\n  display: flex;\n  gap: 1rem;\n}\n\n.form-row-photo {\n  display: flex;\n  gap: 1rem;\n  flex-direction: row;\n    flex-wrap: wrap;\n    align-content: flex-end;\n    justify-content: center;\n    margin-right: -104px;\n\n}\n.form-row .form-group {\n  flex: 1;\n}\n\n.form-actions {\n \n  margin-top: 2rem;\n  margin-left: 342px;\n}\n\n.form-actions button {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: -15px\n}\n\n.form-actions button[type=\"submit\"] {\n  background-color:#321BDE;\n  color: white;\n\n  padding: 0px 17px;\n  font-family: 'Roboto', sans-serif; /* Fonte do texto */\n  line-height: 32px;\n  font-weight: 400;\n  font-style: normal;\n  border-radius:26px;\n}\n\n.form-actions button[type=\"button\"] {\n  background-color: #FFFFFF;\n  color: #505050;\n  font-size: 14px;\n  font-family: 'Roboto', sans-serif;\n  font-family: 'Roboto', sans-serif; /* Fonte do texto */\n  line-height: 32px;\n  font-weight: 400;\n  font-style: normal;\n}\n\n.form-actions button:hover {\n  opacity: 0.8;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}