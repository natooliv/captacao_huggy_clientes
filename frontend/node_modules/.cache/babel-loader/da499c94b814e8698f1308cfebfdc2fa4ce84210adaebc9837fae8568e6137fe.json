{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      this.$refs.photo.value = ''; // Limpa o campo de arquivo após o reset\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editedContact.photo = file;\n      }\n    },\n    submitForm() {\n      this.errorMessage = '';\n      const formData = new FormData();\n      Object.keys(this.editedContact).forEach(key => {\n        if (key === 'photo' && this.$refs.photo.value) {\n          formData.append(key, this.$refs.photo.files[0]);\n        } else {\n          formData.append(key, this.editedContact[key]);\n        }\n      });\n      if (Object.keys(this.editedContact).some(key => this.editedContact[key] !== this.contact[key]) || this.$refs.photo.value) {\n        axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n        }).catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n      } else {\n        this.errorMessage = 'Nenhum campo foi modificado.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","errorMessage","methods","resetData","$refs","photo","value","handleFileUpload","event","file","target","files","submitForm","formData","FormData","keys","forEach","key","append","some","put","id","headers","then","response","console","log","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" ref=\"photo\" @change=\"handleFileUpload\" accept=\"image/*\">\n        <input type=\"text\" v-model=\"editedContact.photo\" placeholder=\"URL da foto (opcional)\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.$refs.photo.value = ''; // Limpa o campo de arquivo após o reset\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editedContact.photo = file;\n      }\n    },\n    submitForm() {\n      this.errorMessage = '';\n\n      const formData = new FormData();\n\n      Object.keys(this.editedContact).forEach(key => {\n        if (key === 'photo' && this.$refs.photo.value) {\n          formData.append(key, this.$refs.photo.files[0]);\n        } else {\n          formData.append(key, this.editedContact[key]);\n        }\n      });\n\n      if (Object.keys(this.editedContact).some(key => this.editedContact[key] !== this.contact[key]) || this.$refs.photo.value) {\n        axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        .then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n        })\n        .catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n      } else {\n        this.errorMessage = 'Nenhum campo foi modificado.';\n      }\n    }\n  }\n};\n</script>\n\n<style>\n/* Estilos para EditContactModal */\n</style>\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MAClCO,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACH,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,CAACU,KAAK,CAACC,KAAK,CAACC,KAAI,GAAI,EAAE,EAAE;MAC7B,IAAI,CAACL,YAAW,GAAI,EAAE;IACxB,CAAC;IACDM,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,IAAI,CAACT,aAAa,CAACK,KAAI,GAAII,IAAI;MACjC;IACF,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX,IAAI,CAACX,YAAW,GAAI,EAAE;MAEtB,MAAMY,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAE/BlB,MAAM,CAACmB,IAAI,CAAC,IAAI,CAACf,aAAa,CAAC,CAACgB,OAAO,CAACC,GAAE,IAAK;QAC7C,IAAIA,GAAE,KAAM,OAAM,IAAK,IAAI,CAACb,KAAK,CAACC,KAAK,CAACC,KAAK,EAAE;UAC7CO,QAAQ,CAACK,MAAM,CAACD,GAAG,EAAE,IAAI,CAACb,KAAK,CAACC,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;QACjD,OAAO;UACLE,QAAQ,CAACK,MAAM,CAACD,GAAG,EAAE,IAAI,CAACjB,aAAa,CAACiB,GAAG,CAAC,CAAC;QAC/C;MACF,CAAC,CAAC;MAEF,IAAIrB,MAAM,CAACmB,IAAI,CAAC,IAAI,CAACf,aAAa,CAAC,CAACmB,IAAI,CAACF,GAAE,IAAK,IAAI,CAACjB,aAAa,CAACiB,GAAG,MAAM,IAAI,CAACvB,OAAO,CAACuB,GAAG,CAAC,KAAK,IAAI,CAACb,KAAK,CAACC,KAAK,CAACC,KAAK,EAAE;QACxHf,KAAK,CAAC6B,GAAG,CAAE,sCAAqC,IAAI,CAAC1B,OAAO,CAAC2B,EAAG,EAAC,EAAER,QAAQ,EAAE;UAC3ES,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,EACAC,IAAI,CAACC,QAAO,IAAK;UAChBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC1B,IAAI,CAAC;UAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;UACtB,IAAI,CAAC4B,KAAK,CAAC,QAAQ,EAAEH,QAAQ,CAAC1B,IAAI,CAAC;QACrC,CAAC,EACA8B,KAAK,CAACC,KAAI,IAAK;UACd,IAAI,CAAC5B,YAAW,GAAI,yBAAyB;UAC7CwB,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD,CAAC,CAAC;MACJ,OAAO;QACL,IAAI,CAAC5B,YAAW,GAAI,8BAA8B;MACpD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}