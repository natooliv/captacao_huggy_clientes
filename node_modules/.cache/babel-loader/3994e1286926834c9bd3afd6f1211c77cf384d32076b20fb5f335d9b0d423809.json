{"ast":null,"code":"import EditContactModal from './EditContactModal.vue';\nexport default {\n  name: 'ContactList',\n  components: {\n    EditContactModal\n  },\n  data() {\n    return {\n      contacts: [],\n      // seus contatos\n      selectedContact: null // contato selecionado para edição\n    };\n  },\n  methods: {\n    openEditModal(contact) {\n      this.selectedContact = contact;\n    },\n    handleContactUpdate(updatedContact) {\n      // Atualizar o contato na lista após a edição\n      const index = this.contacts.findIndex(c => c.id === updatedContact.id);\n      if (index !== -1) {\n        this.contacts.splice(index, 1, updatedContact);\n      }\n    }\n  }\n};","map":{"version":3,"names":["EditContactModal","name","components","data","contacts","selectedContact","methods","openEditModal","contact","handleContactUpdate","updatedContact","index","findIndex","c","id","splice"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Tabela de contatos -->\n    <table v-if=\"contacts.length > 0\">\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Email</th>\n          <th>Telefone</th>\n          <th>Foto</th> <!-- Adicionei a coluna para exibir a foto -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"contact in contacts\" :key=\"contact.id\" @click=\"openEditModal(contact)\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.phone }}</td>\n          <td>{{ contact.photo }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Modal de edição -->\n    <EditContactModal v-if=\"selectedContact\" :contact=\"selectedContact\" @update=\"handleContactUpdate\" />\n  </div>\n</template>\n\n<script>\nimport EditContactModal from './EditContactModal.vue';\n\nexport default {\n  name: 'ContactList',\n  components: {\n    EditContactModal,\n  },\n  data() {\n    return {\n      contacts: [], // seus contatos\n      selectedContact: null, // contato selecionado para edição\n    };\n  },\n  methods: {\n    openEditModal(contact) {\n      this.selectedContact = contact;\n    },\n    handleContactUpdate(updatedContact) {\n      // Atualizar o contato na lista após a edição\n      const index = this.contacts.findIndex(c => c.id === updatedContact.id);\n      if (index !== -1) {\n        this.contacts.splice(index, 1, updatedContact);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para ContactList */\n</style>\n"],"mappings":"AA4BA,OAAOA,gBAAe,MAAO,wBAAwB;AAErD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,eAAe,EAAE,IAAI,CAAE;IACzB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACH,eAAc,GAAIG,OAAO;IAChC,CAAC;IACDC,mBAAmBA,CAACC,cAAc,EAAE;MAClC;MACA,MAAMC,KAAI,GAAI,IAAI,CAACP,QAAQ,CAACQ,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMJ,cAAc,CAACI,EAAE,CAAC;MACtE,IAAIH,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACP,QAAQ,CAACW,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAED,cAAc,CAAC;MAChD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}