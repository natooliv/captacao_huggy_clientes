{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Nome:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone\"\n}, \"Telefone:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"address\"\n}, \"Endereço:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"photo\"\n}, \"Foto (URL ou Upload):\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Salvar\", -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_b_modal = _resolveComponent(\"b-modal\");\n  return _openBlock(), _createBlock(_component_b_modal, {\n    modelValue: _ctx.showModal,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.showModal = $event),\n    title: \"Editar Contato\",\n    onHidden: _ctx.resetData\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"form\", {\n      onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => _ctx.submitForm && _ctx.submitForm(...args), [\"prevent\"]))\n    }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.editedContact.name = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.editedContact.name]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.editedContact.email = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.editedContact.email]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"phone\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.editedContact.phone = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.editedContact.phone]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      id: \"address\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.editedContact.address = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.editedContact.address]])]), _createElementVNode(\"div\", null, [_hoisted_5, _createElementVNode(\"input\", {\n      type: \"file\",\n      id: \"photo\",\n      ref: \"photo\",\n      onChange: _cache[4] || (_cache[4] = (...args) => _ctx.handleFileUpload && _ctx.handleFileUpload(...args)),\n      accept: \"image/*\"\n    }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]), _hoisted_6], 32 /* NEED_HYDRATION */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onHidden\"]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createBlock","_component_b_modal","modelValue","_ctx","showModal","_cache","$event","title","onHidden","resetData","default","_withCtx","onSubmit","_withModifiers","args","submitForm","_hoisted_1","id","editedContact","name","required","_hoisted_2","email","_hoisted_3","phone","_hoisted_4","address","_hoisted_5","ref","onChange","handleFileUpload","accept","_hoisted_6","_"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" ref=\"photo\" @change=\"handleFileUpload\" accept=\"image/*\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact } // Initialize editedContact with the contact data\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact }; // Reset editedContact to the original contact data\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.editedContact.photo = file; // Set the photo field to the selected file\n      }\n    },\n    submitForm() {\n  // Verifique se os campos obrigatórios estão preenchidos\n  if (!this.editedContact.name || !this.editedContact.email || !this.editedContact.phone || !this.editedContact.address) {\n    console.error('Todos os campos obrigatórios devem ser preenchidos.');\n    return;\n  }\n\n  const formData = new FormData();\n\n  // Verifique se o nome foi alterado e não está em branco\n  if (this.editedContact.name !== this.contact.name) {\n    formData.append('name', this.editedContact.name);\n  }\n\n  // Verifique se o email foi alterado e não está em branco\n  if (this.editedContact.email !== this.contact.email) {\n    formData.append('email', this.editedContact.email);\n  }\n\n  // Verifique se o telefone foi alterado e não está em branco\n  if (this.editedContact.phone !== this.contact.phone) {\n    formData.append('phone', this.editedContact.phone);\n  }\n\n  // Verifique se o endereço foi alterado e não está em branco\n  if (this.editedContact.address !== this.contact.address) {\n    formData.append('address', this.editedContact.address);\n  }\n\n  // Verifique se a foto foi alterada (se for um arquivo)\n  if (this.editedContact.photo instanceof File) {\n    formData.append('photo', this.editedContact.photo);\n  }\n\n  // Verifique se a foto foi alterada (se for uma URL diferente) e não está em branco\n  if (\n    this.editedContact.photo &&\n    this.editedContact.photo !== this.contact.photo &&\n    !(this.editedContact.photo instanceof File) &&\n    this.editedContact.photo.trim() !== ''\n  ) {\n    formData.append('photo', this.editedContact.photo);\n  }\n\n  // Verifique se algum campo foi modificado\n  if (formData.has('name') || formData.has('email') || formData.has('phone') || formData.has('address') || formData.has('photo')) {\n    axios.put('http://localhost:8000/api/clientes/' + this.contact.id, formData)\n      .then(response => {\n        // Lógica de sucesso\n        console.log('Contato editado com sucesso:', response.data);\n        // Fechar o modal após a edição ser concluída\n        this.showModal = false;\n        // Emitir evento de atualização para o componente pai\n        this.$emit('update', response.data);\n      })\n      .catch(error => {\n        // Lógica de erro\n        console.error('Erro ao editar contato:', error);\n      });\n  } else {\n    // Nenhum campo foi modificado ou campos obrigatórios estão em branco\n    console.warn('Nenhum campo foi modificado ou campos obrigatórios estão em branco.');\n    // Fechar o modal sem enviar a solicitação\n    this.showModal = false;\n  }\n}\n\n\n      axios.put('http://localhost:8000/api/clientes/' + this.contact.id, formData)\n        .then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n        })\n        .catch(error => {\n          console.error('Erro ao editar contato:', error);\n        });\n    }\n  }\n};\n</script>\n"],"mappings":";gCAIQA,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;gCAIvBD,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;gCAIzBD,mBAAA,CAAoC;EAA7BC,GAAG,EAAC;AAAO,GAAC,WAAS;gCAI5BD,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAS,GAAC,WAAS;gCAI9BD,mBAAA,CAAgD;EAAzCC,GAAG,EAAC;AAAO,GAAC,uBAAqB;gCAG1CD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAtBhCC,YAAA,CAwBUC,kBAAA;IAzBZC,UAAA,EACoBC,IAAA,CAAAC,SAAS;IAD7B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IACoBH,IAAA,CAAAC,SAAS,GAAAE,MAAA;IAAEC,KAAK,EAAC,gBAAgB;IAAEC,QAAM,EAAEL,IAAA,CAAAM;;IAD/DC,OAAA,EAAAC,QAAA,CAEI,MAsBO,CAtBPd,mBAAA,CAsBO;MAtBAe,QAAM,EAAAP,MAAA,QAAAA,MAAA,MAFjBQ,cAAA,KAAAC,IAAA,KAE2BX,IAAA,CAAAY,UAAA,IAAAZ,IAAA,CAAAY,UAAA,IAAAD,IAAA,CAAU;QAC/BjB,mBAAA,CAGM,cAFJmB,UAA+B,E,gBAC/BnB,mBAAA,CAAmE;MAA5DE,IAAI,EAAC,MAAM;MAACkB,EAAE,EAAC,MAAM;MALpC,uBAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK8CH,IAAA,CAAAe,aAAa,CAACC,IAAI,GAAAb,MAAA;MAAEc,QAAQ,EAAR;mDAApBjB,IAAA,CAAAe,aAAa,CAACC,IAAI,E,KAE1DtB,mBAAA,CAGM,cAFJwB,UAAiC,E,gBACjCxB,mBAAA,CAAsE;MAA/DE,IAAI,EAAC,OAAO;MAACkB,EAAE,EAAC,OAAO;MATtC,uBAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASgDH,IAAA,CAAAe,aAAa,CAACI,KAAK,GAAAhB,MAAA;MAAEc,QAAQ,EAAR;mDAArBjB,IAAA,CAAAe,aAAa,CAACI,KAAK,E,KAE7DzB,mBAAA,CAGM,cAFJ0B,UAAoC,E,gBACpC1B,mBAAA,CAAqE;MAA9DE,IAAI,EAAC,MAAM;MAACkB,EAAE,EAAC,OAAO;MAbrC,uBAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAa+CH,IAAA,CAAAe,aAAa,CAACM,KAAK,GAAAlB,MAAA;MAAEc,QAAQ,EAAR;mDAArBjB,IAAA,CAAAe,aAAa,CAACM,KAAK,E,KAE5D3B,mBAAA,CAGM,cAFJ4B,UAAsC,E,gBACtC5B,mBAAA,CAAyE;MAAlEE,IAAI,EAAC,MAAM;MAACkB,EAAE,EAAC,SAAS;MAjBvC,uBAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiBiDH,IAAA,CAAAe,aAAa,CAACQ,OAAO,GAAApB,MAAA;MAAEc,QAAQ,EAAR;mDAAvBjB,IAAA,CAAAe,aAAa,CAACQ,OAAO,E,KAEhE7B,mBAAA,CAGM,cAFJ8B,UAAgD,EAChD9B,mBAAA,CAAsF;MAA/EE,IAAI,EAAC,MAAM;MAACkB,EAAE,EAAC,OAAO;MAACW,GAAG,EAAC,OAAO;MAAEC,QAAM,EAAAxB,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEX,IAAA,CAAA2B,gBAAA,IAAA3B,IAAA,CAAA2B,gBAAA,IAAAhB,IAAA,CAAgB;MAAEiB,MAAM,EAAC;sDAE9EC,UAAqC,C;IAvB3CC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}