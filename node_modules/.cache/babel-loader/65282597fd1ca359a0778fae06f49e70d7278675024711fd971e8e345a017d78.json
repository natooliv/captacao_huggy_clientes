{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      if (this.$refs.photo) {\n        this.$refs.photo.value = ''; // Limpa o campo de arquivo após o reset\n      }\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.editedContact.photo = e.target.result; // Armazena a foto como base64\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact).then(response => {\n        console.log('Contato editado com sucesso:', response.data);\n        this.showModal = false;\n        this.$emit('update', response.data);\n        this.resetData();\n      }).catch(error => {\n        this.errorMessage = 'Erro ao editar contato.';\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","errorMessage","methods","resetData","$refs","photo","value","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","submitForm","console","log","trim","email","phone","address","put","id","then","response","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" @change=\"handleFileUpload\">\n        <input type=\"text\" v-model=\"editedContact.photo\" placeholder=\"Ou insira a URL da foto\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      if (this.$refs.photo) {\n        this.$refs.photo.value = '';  // Limpa o campo de arquivo após o reset\n      }\n      this.errorMessage = '';\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.editedContact.photo = e.target.result; // Armazena a foto como base64\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return;\n      }\n\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact)\n        .then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n          this.resetData();\n        })\n        .catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n    }\n  }\n};\n</script>\n"],"mappings":"AA8BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MAClCO,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACH,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,IAAI,CAACU,KAAK,CAACC,KAAK,EAAE;QACpB,IAAI,CAACD,KAAK,CAACC,KAAK,CAACC,KAAI,GAAI,EAAE,EAAG;MAChC;MACA,IAAI,CAACL,YAAW,GAAI,EAAE;IACxB,CAAC;IACDM,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAK;UACrB,IAAI,CAACf,aAAa,CAACK,KAAI,GAAIU,CAAC,CAACL,MAAM,CAACM,MAAM,EAAE;QAC9C,CAAC;QACDJ,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC;MAC5B;IACF,CAAC;IACDS,UAAUA,CAAA,EAAG;MACXC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACnB,YAAW,GAAI,EAAE;MAEtB,IAAI,CAAC,IAAI,CAACD,aAAa,CAACR,IAAI,CAAC6B,IAAI,CAAC,KAAK,CAAC,IAAI,CAACrB,aAAa,CAACsB,KAAK,CAACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAACrB,aAAa,CAACuB,KAAK,CAACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAACrB,aAAa,CAACwB,OAAO,CAACH,IAAI,CAAC,CAAC,EAAE;QACjJ,IAAI,CAACpB,YAAW,GAAI,mDAAmD;QACvE;MACF;MAEAV,KAAK,CAACkC,GAAG,CAAE,sCAAqC,IAAI,CAAC/B,OAAO,CAACgC,EAAG,EAAC,EAAE,IAAI,CAAC1B,aAAa,EAClF2B,IAAI,CAACC,QAAO,IAAK;QAChBT,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEQ,QAAQ,CAAC9B,IAAI,CAAC;QAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;QACtB,IAAI,CAAC8B,KAAK,CAAC,QAAQ,EAAED,QAAQ,CAAC9B,IAAI,CAAC;QACnC,IAAI,CAACK,SAAS,CAAC,CAAC;MAClB,CAAC,EACA2B,KAAK,CAACC,KAAI,IAAK;QACd,IAAI,CAAC9B,YAAW,GAAI,yBAAyB;QAC7CkB,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}