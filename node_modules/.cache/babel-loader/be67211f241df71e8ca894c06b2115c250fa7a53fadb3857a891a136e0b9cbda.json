{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: []\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.contacts.filter(contact => contact.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    async fetchContacts() {\n      try {\n        const response = await axios.get('https://aaca-2804-1b3-6901-129e-227d-7911-fd53-1a16.ngrok-free.app/api/clientes'); // Altere para a URL correta do ngrok\n        console.log('Resposta da API ao buscar clientes:', response.data);\n        if (Array.isArray(response.data)) {\n          this.contacts = response.data;\n        } else {\n          console.error('A resposta da API não é um array:', response.data);\n          this.contacts = [];\n        }\n      } catch (error) {\n        console.error('Ocorreu um erro ao buscar os clientes:', error);\n        this.contacts = [];\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","searchQuery","contacts","computed","filteredContacts","filter","contact","toLowerCase","includes","mounted","fetchContacts","methods","response","get","console","log","Array","isArray","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"search\" placeholder=\"Buscar contato\" v-model=\"searchQuery\">\n    <!-- Tabela de contatos -->\n    <table v-if=\"searchQuery.length > 0\">\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Email</th>\n          <th>Telefone</th>\n          <th>Foto</th> <!-- Adicionei a coluna para exibir a foto -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"contact in filteredContacts\" :key=\"contact.id\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.phone }}</td>\n          <td>{{ contact.photo }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ContactList',\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [],\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.contacts.filter(contact =>\n        contact.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n  methods: {\n    async fetchContacts() {\n      try {\n        const response = await axios.get('https://aaca-2804-1b3-6901-129e-227d-7911-fd53-1a16.ngrok-free.app/api/clientes'); // Altere para a URL correta do ngrok\n        console.log('Resposta da API ao buscar clientes:', response.data);\n        if (Array.isArray(response.data)) {\n          this.contacts = response.data;\n        } else {\n          console.error('A resposta da API não é um array:', response.data);\n          this.contacts = [];\n        }\n      } catch (error) {\n        console.error('Ocorreu um erro ao buscar os clientes:', error);\n        this.contacts = [];\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para ContactList */\n</style>\n"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,OAAM,IAChCA,OAAO,CAACP,IAAI,CAACQ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACP,WAAW,CAACM,WAAW,CAAC,CAAC,CACpE,CAAC;IACH;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,iFAAiF,CAAC,EAAE;QACrHC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEH,QAAQ,CAACZ,IAAI,CAAC;QACjE,IAAIgB,KAAK,CAACC,OAAO,CAACL,QAAQ,CAACZ,IAAI,CAAC,EAAE;UAChC,IAAI,CAACE,QAAO,GAAIU,QAAQ,CAACZ,IAAI;QAC/B,OAAO;UACLc,OAAO,CAACI,KAAK,CAAC,mCAAmC,EAAEN,QAAQ,CAACZ,IAAI,CAAC;UACjE,IAAI,CAACE,QAAO,GAAI,EAAE;QACpB;MACF,EAAE,OAAOgB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,IAAI,CAAChB,QAAO,GAAI,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}