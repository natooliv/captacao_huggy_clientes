{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('name', this.formData.name);\n        formData.append('email', this.formData.email);\n        formData.append('phone', this.formData.phone);\n        formData.append('address', this.formData.address);\n        if (this.formData.photo instanceof File) {\n          formData.append('photo', this.formData.photo);\n        }\n        const response = await axios.post('http://localhost:8000/api/clientes', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Resposta da API:', response.data);\n        this.resetForm();\n        this.$emit('contactAdded', response.data);\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.photo = file;\n      }\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","formData","email","phone","address","photo","methods","submitForm","FormData","append","File","response","post","headers","console","log","resetForm","$emit","error","handleFileUpload","event","file","target","files"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <input type=\"text\" v-model=\"formData.name\" placeholder=\"Nome\" required>\n    <input type=\"email\" v-model=\"formData.email\" placeholder=\"Email\" required>\n    <input type=\"tel\" v-model=\"formData.phone\" placeholder=\"Telefone\" required>\n    <input type=\"text\" v-model=\"formData.address\" placeholder=\"EndereÃ§o\">\n    <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\">\n\n    <button type=\"submit\">Adicionar contato</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null,\n      },\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('name', this.formData.name);\n        formData.append('email', this.formData.email);\n        formData.append('phone', this.formData.phone);\n        formData.append('address', this.formData.address);\n\n        if (this.formData.photo instanceof File) {\n          formData.append('photo', this.formData.photo);\n        }\n\n        const response = await axios.post('http://localhost:8000/api/clientes', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n\n        console.log('Resposta da API:', response.data);\n        this.resetForm();\n        this.$emit('contactAdded', response.data);\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.photo = file;\n      }\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null,\n      };\n    },\n  }\n};\n</script>\n\n<style scoped>\n/* Estilos para o AddContactForm */\n</style>\n"],"mappings":"AAaA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMN,QAAO,GAAI,IAAIO,QAAQ,CAAC,CAAC;QAC/BP,QAAQ,CAACQ,MAAM,CAAC,MAAM,EAAE,IAAI,CAACR,QAAQ,CAACF,IAAI,CAAC;QAC3CE,QAAQ,CAACQ,MAAM,CAAC,OAAO,EAAE,IAAI,CAACR,QAAQ,CAACC,KAAK,CAAC;QAC7CD,QAAQ,CAACQ,MAAM,CAAC,OAAO,EAAE,IAAI,CAACR,QAAQ,CAACE,KAAK,CAAC;QAC7CF,QAAQ,CAACQ,MAAM,CAAC,SAAS,EAAE,IAAI,CAACR,QAAQ,CAACG,OAAO,CAAC;QAEjD,IAAI,IAAI,CAACH,QAAQ,CAACI,KAAI,YAAaK,IAAI,EAAE;UACvCT,QAAQ,CAACQ,MAAM,CAAC,OAAO,EAAE,IAAI,CAACR,QAAQ,CAACI,KAAK,CAAC;QAC/C;QAEA,MAAMM,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAEX,QAAQ,EAAE;UAChFY,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAACX,IAAI,CAAC;QAC9C,IAAI,CAACgB,SAAS,CAAC,CAAC;QAChB,IAAI,CAACC,KAAK,CAAC,cAAc,EAAEN,QAAQ,CAACX,IAAI,CAAC;MAC3C,EAAE,OAAOkB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,IAAI,CAACpB,QAAQ,CAACI,KAAI,GAAIgB,IAAI;MAC5B;IACF,CAAC;IACDL,SAASA,CAAA,EAAG;MACV,IAAI,CAACf,QAAO,GAAI;QACdF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE;MACT,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}