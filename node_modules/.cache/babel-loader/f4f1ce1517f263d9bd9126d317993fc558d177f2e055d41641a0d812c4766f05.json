{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AddContactForm',\n  props: {\n    contact: Object,\n    // Propriedade para receber o contato ao editar (opcional)\n    isEditing: Boolean // Propriedade para indicar se é edição ou adição\n  },\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null // Armazenar a foto a ser enviada\n      }\n    };\n  },\n  computed: {\n    contactId() {\n      return this.contact ? this.contact.id : null;\n    }\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('name', this.formData.name);\n        formData.append('email', this.formData.email);\n        formData.append('phone', this.formData.phone);\n        formData.append('address', this.formData.address);\n        formData.append('photo', this.formData.photo); // Adicionar o arquivo de imagem ao FormData\n\n        const endpoint = this.isEditing ? `http://localhost:8000/api/clientes/${this.contactId}` : 'http://localhost:8000/api/clientes';\n        const method = this.isEditing ? 'put' : 'post';\n        const response = await axios[method](endpoint, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // Definir o tipo de conteúdo como multipart/form-data para upload de arquivo\n          }\n        });\n        console.log('Resposta da API:', response.data);\n\n        // Limpar o formulário após adicionar ou editar\n        this.resetForm();\n\n        // Emitir evento para notificar componente pai sobre ação concluída\n        this.$emit('actionCompleted', response.data);\n      } catch (error) {\n        console.error('Erro ao adicionar/editar contato:', error);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.photo = file; // Armazenar o arquivo na propriedade 'photo'\n      }\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null\n      };\n    }\n  },\n  mounted() {\n    // Preencher o formulário com os dados do contato ao editar\n    if (this.isEditing && this.contact) {\n      this.formData.name = this.contact.name;\n      this.formData.email = this.contact.email;\n      this.formData.phone = this.contact.phone;\n      this.formData.address = this.contact.address;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","Object","isEditing","Boolean","data","formData","email","phone","address","photo","computed","contactId","id","methods","submitForm","FormData","append","endpoint","method","response","headers","console","log","resetForm","$emit","error","handleFileUpload","event","file","target","files","mounted"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <!-- Campos do formulário para adicionar ou editar contato -->\n    <input type=\"text\" v-model=\"formData.name\" placeholder=\"Nome\" required>\n    <input type=\"email\" v-model=\"formData.email\" placeholder=\"Email\" required>\n    <input type=\"tel\" v-model=\"formData.phone\" placeholder=\"Telefone\" required>\n    <input type=\"text\" v-model=\"formData.address\" placeholder=\"Endereço\">\n    <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\"> <!-- Campo para upload de foto -->\n\n    <button type=\"submit\">{{ isEditing ? 'Salvar' : 'Adicionar' }} contato</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AddContactForm',\n  props: {\n    contact: Object, // Propriedade para receber o contato ao editar (opcional)\n    isEditing: Boolean, // Propriedade para indicar se é edição ou adição\n  },\n  data() {\n    return {\n      formData: {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null, // Armazenar a foto a ser enviada\n      },\n    };\n  },\n  computed: {\n    contactId() {\n      return this.contact ? this.contact.id : null;\n    },\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('name', this.formData.name);\n        formData.append('email', this.formData.email);\n        formData.append('phone', this.formData.phone);\n        formData.append('address', this.formData.address);\n        formData.append('photo', this.formData.photo); // Adicionar o arquivo de imagem ao FormData\n\n        const endpoint = this.isEditing ? `http://localhost:8000/api/clientes/${this.contactId}` : 'http://localhost:8000/api/clientes';\n        const method = this.isEditing ? 'put' : 'post';\n\n        const response = await axios[method](endpoint, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data', // Definir o tipo de conteúdo como multipart/form-data para upload de arquivo\n          },\n        });\n\n        console.log('Resposta da API:', response.data);\n\n        // Limpar o formulário após adicionar ou editar\n        this.resetForm();\n\n        // Emitir evento para notificar componente pai sobre ação concluída\n        this.$emit('actionCompleted', response.data);\n      } catch (error) {\n        console.error('Erro ao adicionar/editar contato:', error);\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.photo = file; // Armazenar o arquivo na propriedade 'photo'\n      }\n    },\n    resetForm() {\n      this.formData = {\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n        photo: null,\n      };\n    },\n  },\n  mounted() {\n    // Preencher o formulário com os dados do contato ao editar\n    if (this.isEditing && this.contact) {\n      this.formData.name = this.contact.name;\n      this.formData.email = this.contact.email;\n      this.formData.phone = this.contact.phone;\n      this.formData.address = this.contact.address;\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para o ContactForm */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}