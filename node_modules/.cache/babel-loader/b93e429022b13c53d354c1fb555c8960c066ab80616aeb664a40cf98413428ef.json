{"ast":null,"code":"export default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        name: '',\n        email: '',\n        phone: '',\n        photo: ''\n      },\n      photoFile: null\n    };\n  },\n  watch: {\n    contact: {\n      handler(newVal) {\n        this.editedContact = {\n          ...newVal\n        };\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      this.photoFile = null; // Limpar o arquivo de foto ao resetar os dados\n    },\n    handlePhotoUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // Ler o arquivo como URL para exibição na prévia da foto\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.editedContact.photo = reader.result;\n        };\n        reader.readAsDataURL(file);\n\n        // Armazenar o arquivo para enviar ao servidor\n        this.photoFile = file;\n      }\n    },\n    submitForm() {\n      // Enviar o arquivo de foto junto com os dados do contato para a API\n      const formData = new FormData();\n      formData.append('name', this.editedContact.name);\n      formData.append('email', this.editedContact.email);\n      formData.append('phone', this.editedContact.phone);\n      if (this.photoFile) {\n        formData.append('photo', this.photoFile);\n      }\n\n      // Exemplo de envio para a API usando axios\n      axios.post('http://localhost:8000/api/edit-contact', formData).then(response => {\n        // Lógica de sucesso\n        console.log('Contato editado com sucesso:', response.data);\n        // Fechar o modal após a edição ser concluída\n        this.showModal = false;\n      }).catch(error => {\n        // Lógica de erro\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","contact","type","Object","required","data","showModal","editedContact","email","phone","photo","photoFile","watch","handler","newVal","immediate","methods","resetData","handlePhotoUpload","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","submitForm","formData","FormData","append","axios","post","then","response","console","log","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto:</label>\n        <input type=\"file\" id=\"photo\" @change=\"handlePhotoUpload\" accept=\"image/*\">\n        <img v-if=\"editedContact.photo\" :src=\"editedContact.photo\" alt=\"Foto do contato\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        name: '',\n        email: '',\n        phone: '',\n        photo: ''\n      },\n      photoFile: null\n    };\n  },\n  watch: {\n    contact: {\n      handler(newVal) {\n        this.editedContact = { ...newVal };\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.photoFile = null; // Limpar o arquivo de foto ao resetar os dados\n    },\n    handlePhotoUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // Ler o arquivo como URL para exibição na prévia da foto\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.editedContact.photo = reader.result;\n        };\n        reader.readAsDataURL(file);\n\n        // Armazenar o arquivo para enviar ao servidor\n        this.photoFile = file;\n      }\n    },\n    submitForm() {\n      // Enviar o arquivo de foto junto com os dados do contato para a API\n      const formData = new FormData();\n      formData.append('name', this.editedContact.name);\n      formData.append('email', this.editedContact.email);\n      formData.append('phone', this.editedContact.phone);\n      if (this.photoFile) {\n        formData.append('photo', this.photoFile);\n      }\n\n      // Exemplo de envio para a API usando axios\n      axios.post('http://localhost:8000/api/edit-contact', formData)\n        .then(response => {\n          // Lógica de sucesso\n          console.log('Contato editado com sucesso:', response.data);\n          // Fechar o modal após a edição ser concluída\n          this.showModal = false;\n        })\n        .catch(error => {\n          // Lógica de erro\n          console.error('Erro ao editar contato:', error);\n        });\n    }\n  }\n};\n</script>\n\n<style>\n/* Estilos para EditContactModal */\n</style>\n"],"mappings":"AA0BA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QACbR,IAAI,EAAE,EAAE;QACRS,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT,CAAC;MACDC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLX,OAAO,EAAE;MACPY,OAAOA,CAACC,MAAM,EAAE;QACd,IAAI,CAACP,aAAY,GAAI;UAAE,GAAGO;QAAO,CAAC;MACpC,CAAC;MACDC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACV,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,CAACU,SAAQ,GAAI,IAAI,EAAE;IACzB,CAAC;IACDO,iBAAiBA,CAACC,KAAK,EAAE;MACvB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR;QACA,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UACpB,IAAI,CAAClB,aAAa,CAACG,KAAI,GAAIa,MAAM,CAACG,MAAM;QAC1C,CAAC;QACDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;;QAE1B;QACA,IAAI,CAACT,SAAQ,GAAIS,IAAI;MACvB;IACF,CAAC;IACDQ,UAAUA,CAAA,EAAG;MACX;MACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACxB,aAAa,CAACR,IAAI,CAAC;MAChD8B,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACxB,aAAa,CAACC,KAAK,CAAC;MAClDqB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACxB,aAAa,CAACE,KAAK,CAAC;MAClD,IAAI,IAAI,CAACE,SAAS,EAAE;QAClBkB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpB,SAAS,CAAC;MAC1C;;MAEA;MACAqB,KAAK,CAACC,IAAI,CAAC,wCAAwC,EAAEJ,QAAQ,EAC1DK,IAAI,CAACC,QAAO,IAAK;QAChB;QACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC9B,IAAI,CAAC;QAC1D;QACA,IAAI,CAACC,SAAQ,GAAI,KAAK;MACxB,CAAC,EACAgC,KAAK,CAACC,KAAI,IAAK;QACd;QACAH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}