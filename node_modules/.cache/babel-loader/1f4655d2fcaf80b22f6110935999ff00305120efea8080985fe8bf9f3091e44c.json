{"ast":null,"code":"export default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      newContact: {\n        name: '',\n        email: '',\n        phone: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Fazer a requisição POST para adicionar o novo contato\n        const response = await axios.post('localhost:8000/api/clientes', this.newContact);\n        console.log('Resposta da API ao adicionar contato:', response.data);\n\n        // Atualizar a lista de contatos após a adição\n        this.$emit('contactAdded', response.data); // Emitir evento para notificar componente pai\n        this.newContact = {\n          name: '',\n          email: '',\n          phone: ''\n        }; // Limpar o formulário após adicionar\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","newContact","email","phone","methods","submitForm","response","axios","post","console","log","$emit","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/AddContactForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <!-- Campos do formulário para adicionar contato -->\n    <input type=\"text\" v-model=\"newContact.name\" placeholder=\"Nome\" required>\n    <input type=\"email\" v-model=\"newContact.email\" placeholder=\"Email\" required>\n    <input type=\"tel\" v-model=\"newContact.phone\" placeholder=\"Telefone\" required>\n    <button type=\"submit\">Adicionar contato</button>\n  </form>\n</template>\n\n<script>\nexport default {\n  name: 'AddContactForm',\n  data() {\n    return {\n      newContact: {\n        name: '',\n        email: '',\n        phone: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Fazer a requisição POST para adicionar o novo contato\n        const response = await axios.post('localhost:8000/api/clientes', this.newContact);\n        console.log('Resposta da API ao adicionar contato:', response.data);\n        \n        // Atualizar a lista de contatos após a adição\n        this.$emit('contactAdded', response.data); // Emitir evento para notificar componente pai\n        this.newContact = { name: '', email: '', phone: '' }; // Limpar o formulário após adicionar\n      } catch (error) {\n        console.error('Erro ao adicionar contato:', error);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Estilos para o AddContactForm */\n</style>\n"],"mappings":"AAWA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACC,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAACP,UAAU,CAAC;QACjFQ,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEJ,QAAQ,CAACN,IAAI,CAAC;;QAEnE;QACA,IAAI,CAACW,KAAK,CAAC,cAAc,EAAEL,QAAQ,CAACN,IAAI,CAAC,EAAE;QAC3C,IAAI,CAACC,UAAS,GAAI;UAAEF,IAAI,EAAE,EAAE;UAAEG,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC,EAAE;MACxD,EAAE,OAAOS,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}