{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      this.errorMessage = '';\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      // // Verifica se os campos obrigatórios estão preenchidos\n      // if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim() || !this.editedContact.photo) {\n      //   this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n      //   return; // Retorna sem enviar a requisição se algum campo obrigatório estiver vazio\n      // }\n      const formData = new FormData();\n      formData.append('name', this.editedContact.name.trim());\n      formData.append('email', this.editedContact.email.trim());\n      formData.append('phone', this.editedContact.phone.trim());\n      formData.append('address', this.editedContact.address.trim());\n\n      // Adiciona a foto se um arquivo foi selecionado\n      const photoFile = this.$refs.photo.files[0];\n      if (photoFile) {\n        formData.append('photo', photoFile);\n        console.log('Nova foto selecionada:', photoFile.name);\n      } else {\n        console.log('Nenhuma foto selecionada. Utilizando foto existente.');\n      }\n\n      // Envia a requisição para atualizar o contato no backend\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact).then(response => {\n        console.log('Contato editado com sucesso:', response.data);\n        this.showModal = false;\n        this.$emit('update', response.data);\n        this.resetData();\n      }).catch(error => {\n        this.errorMessage = 'Erro ao editar contato.';\n        console.error('Erro ao editar contato:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","errorMessage","methods","resetData","submitForm","console","log","formData","FormData","append","trim","email","phone","address","photoFile","$refs","photo","files","put","id","then","response","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" ref=\"photo\" @change=\"handleFileUpload\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.errorMessage = '';\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      // // Verifica se os campos obrigatórios estão preenchidos\n      // if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim() || !this.editedContact.photo) {\n      //   this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n      //   return; // Retorna sem enviar a requisição se algum campo obrigatório estiver vazio\n      // }\n      const formData = new FormData();\n  formData.append('name', this.editedContact.name.trim());\n  formData.append('email', this.editedContact.email.trim());\n  formData.append('phone', this.editedContact.phone.trim());\n  formData.append('address', this.editedContact.address.trim());\n\n  // Adiciona a foto se um arquivo foi selecionado\n  const photoFile = this.$refs.photo.files[0];\n  if (photoFile) {\n    formData.append('photo', photoFile);\n    console.log('Nova foto selecionada:', photoFile.name);\n  } else {\n    console.log('Nenhuma foto selecionada. Utilizando foto existente.');\n  }\n\n      // Envia a requisição para atualizar o contato no backend\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact)\n        .then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n          this.resetData();\n        })\n        .catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n    }\n  }\n};\n</script>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MAClCO,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACH,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,CAACO,YAAW,GAAI,EAAE;IACxB,CAAC;IACDG,UAAUA,CAAA,EAAG;MACXC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACL,YAAW,GAAI,EAAE;;MAEtB;MACA;MACA;MACA;MACA;MACA,MAAMM,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MACnCD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACT,aAAa,CAACR,IAAI,CAACkB,IAAI,CAAC,CAAC,CAAC;MACvDH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,aAAa,CAACW,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC;MACzDH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,aAAa,CAACY,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC;MACzDH,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACT,aAAa,CAACa,OAAO,CAACH,IAAI,CAAC,CAAC,CAAC;;MAE7D;MACA,MAAMI,SAAQ,GAAI,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC;MAC3C,IAAIH,SAAS,EAAE;QACbP,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEK,SAAS,CAAC;QACnCT,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEQ,SAAS,CAACtB,IAAI,CAAC;MACvD,OAAO;QACLa,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;MACrE;;MAEI;MACAf,KAAK,CAAC2B,GAAG,CAAE,sCAAqC,IAAI,CAACxB,OAAO,CAACyB,EAAG,EAAC,EAAE,IAAI,CAACnB,aAAa,EAClFoB,IAAI,CAACC,QAAO,IAAK;QAChBhB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEe,QAAQ,CAACvB,IAAI,CAAC;QAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;QACtB,IAAI,CAACuB,KAAK,CAAC,QAAQ,EAAED,QAAQ,CAACvB,IAAI,CAAC;QACnC,IAAI,CAACK,SAAS,CAAC,CAAC;MAClB,CAAC,EACAoB,KAAK,CAACC,KAAI,IAAK;QACd,IAAI,CAACvB,YAAW,GAAI,yBAAyB;QAC7CI,OAAO,CAACmB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}