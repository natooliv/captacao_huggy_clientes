{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: {\n        ...this.contact\n      },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = {\n        ...this.contact\n      };\n      this.errorMessage = '';\n    }\n  },\n  handleFileUpload(event) {\n    this.editedContact.photo = event.target.files[0];\n  },\n  submitForm() {\n    console.log('Formulário submetido!');\n    this.errorMessage = '';\n\n    // Verifica se os campos obrigatórios estão preenchidos\n    if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n      this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n      return; // Retorna sem enviar a requisição se algum campo obrigatório estiver vazio\n    }\n\n    // Envia a requisição para atualizar o contato no backend\n    axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact).then(response => {\n      console.log('Contato editado com sucesso:', response.data);\n      this.showModal = false;\n      this.$emit('update', response.data);\n      this.resetData();\n    }).catch(error => {\n      this.errorMessage = 'Erro ao editar contato.';\n      console.error('Erro ao editar contato:', error);\n    });\n  }\n};","map":{"version":3,"names":["axios","name","props","contact","type","Object","required","data","showModal","editedContact","errorMessage","methods","resetData","handleFileUpload","event","photo","target","files","submitForm","console","log","trim","email","phone","address","put","id","then","response","$emit","catch","error"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/EditContactModal.vue"],"sourcesContent":["<template>\n  <b-modal v-model=\"showModal\" title=\"Editar Contato\" @hidden=\"resetData\">\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"name\">Nome:</label>\n        <input type=\"text\" id=\"name\" v-model=\"editedContact.name\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"editedContact.email\" required>\n      </div>\n      <div>\n        <label for=\"phone\">Telefone:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"editedContact.phone\" required>\n      </div>\n      <div>\n        <label for=\"address\">Endereço:</label>\n        <input type=\"text\" id=\"address\" v-model=\"editedContact.address\" required>\n      </div>\n      <div>\n        <label for=\"photo\">Foto (URL ou Upload):</label>\n        <input type=\"file\" id=\"photo\" ref=\"photo\" @change=\"handleFileUpload\">\n      </div>\n      <button type=\"submit\">Salvar</button>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'EditContactModal',\n  props: {\n    contact: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showModal: false,\n      editedContact: { ...this.contact },\n      errorMessage: ''\n    };\n  },\n  methods: {\n    resetData() {\n      this.editedContact = { ...this.contact };\n      this.errorMessage = '';\n    },\n  },\n    handleFileUpload(event) {\n      this.editedContact.photo = event.target.files[0];\n    },\n    submitForm() {\n      console.log('Formulário submetido!');\n      this.errorMessage = '';\n\n      // Verifica se os campos obrigatórios estão preenchidos\n      if (!this.editedContact.name.trim() || !this.editedContact.email.trim() || !this.editedContact.phone.trim() || !this.editedContact.address.trim()) {\n        this.errorMessage = 'Por favor, preencha todos os campos obrigatórios.';\n        return; // Retorna sem enviar a requisição se algum campo obrigatório estiver vazio\n      }\n\n      // Envia a requisição para atualizar o contato no backend\n      axios.put(`http://localhost:8000/api/clientes/${this.contact.id}`, this.editedContact)\n        .then(response => {\n          console.log('Contato editado com sucesso:', response.data);\n          this.showModal = false;\n          this.$emit('update', response.data);\n          this.resetData();\n        })\n        .catch(error => {\n          this.errorMessage = 'Erro ao editar contato.';\n          console.error('Erro ao editar contato:', error);\n        });\n    }\n  }\n</script>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MAClCO,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACH,aAAY,GAAI;QAAE,GAAG,IAAI,CAACN;MAAQ,CAAC;MACxC,IAAI,CAACO,YAAW,GAAI,EAAE;IACxB;EACF,CAAC;EACCG,gBAAgBA,CAACC,KAAK,EAAE;IACtB,IAAI,CAACL,aAAa,CAACM,KAAI,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClD,CAAC;EACDC,UAAUA,CAAA,EAAG;IACXC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,CAACV,YAAW,GAAI,EAAE;;IAEtB;IACA,IAAI,CAAC,IAAI,CAACD,aAAa,CAACR,IAAI,CAACoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAACZ,aAAa,CAACa,KAAK,CAACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAACZ,aAAa,CAACc,KAAK,CAACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAACZ,aAAa,CAACe,OAAO,CAACH,IAAI,CAAC,CAAC,EAAE;MACjJ,IAAI,CAACX,YAAW,GAAI,mDAAmD;MACvE,OAAM,CAAE;IACV;;IAEA;IACAV,KAAK,CAACyB,GAAG,CAAE,sCAAqC,IAAI,CAACtB,OAAO,CAACuB,EAAG,EAAC,EAAE,IAAI,CAACjB,aAAa,EAClFkB,IAAI,CAACC,QAAO,IAAK;MAChBT,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEQ,QAAQ,CAACrB,IAAI,CAAC;MAC1D,IAAI,CAACC,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACqB,KAAK,CAAC,QAAQ,EAAED,QAAQ,CAACrB,IAAI,CAAC;MACnC,IAAI,CAACK,SAAS,CAAC,CAAC;IAClB,CAAC,EACAkB,KAAK,CAACC,KAAI,IAAK;MACd,IAAI,CAACrB,YAAW,GAAI,yBAAyB;MAC7CS,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}