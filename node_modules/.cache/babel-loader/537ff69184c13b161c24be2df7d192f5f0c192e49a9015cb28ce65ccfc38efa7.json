{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-002fd7de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nome\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Telefone\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ações\")])], -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EditContactModal = _resolveComponent(\"EditContactModal\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"search\",\n    placeholder: \"Buscar contato\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), $data.contacts.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredContacts, contact => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: contact.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(contact.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.phone), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openEditModal(contact)\n    }, \"Editar\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.selectedContact ? (_openBlock(), _createBlock(_component_EditContactModal, {\n    key: 1,\n    contact: $data.selectedContact,\n    onUpdate: $options.updateContact\n  }, null, 8 /* PROPS */, [\"contact\", \"onUpdate\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementVNode","_createElementBlock","type","placeholder","_cache","$event","$data","searchQuery","contacts","length","_hoisted_1","_hoisted_2","_Fragment","_renderList","$options","filteredContacts","contact","id","_toDisplayString","name","email","phone","onClick","openEditModal","_hoisted_3","_createCommentVNode","selectedContact","_createBlock","_component_EditContactModal","onUpdate","updateContact"],"sources":["/home/natalia/teste_huggy_/huggy/src/components/ContactList.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"search\" placeholder=\"Buscar contato\" v-model=\"searchQuery\">\n    <table v-if=\"contacts.length > 0\">\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Email</th>\n          <th>Telefone</th>\n          <th>Ações</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"contact in filteredContacts\" :key=\"contact.id\">\n          <td>{{ contact.name }}</td>\n          <td>{{ contact.email }}</td>\n          <td>{{ contact.phone }}</td>\n          <td>\n            <button @click=\"openEditModal(contact)\">Editar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <EditContactModal v-if=\"selectedContact\" :contact=\"selectedContact\" @update=\"updateContact\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport EditContactModal from './EditContactModal';\n\nexport default {\n  name: 'ContactList',\n  components: {\n    EditContactModal,\n  },\n  data() {\n    return {\n      searchQuery: '',\n      contacts: [],\n      selectedContact: null,\n    };\n  },\n  computed: {\n    filteredContacts() {\n      return this.searchQuery.length > 0\n        ? this.contacts.filter(contact =>\n            contact.name.toLowerCase().includes(this.searchQuery.toLowerCase()))\n        : this.contacts;\n    },\n  },\n  methods: {\n    fetchContacts() {\n      axios.get('http://localhost:8000/api/clientes')\n        .then(response => {\n          this.contacts = Array.isArray(response.data) ? response.data : [];\n        })\n        .catch(error => {\n          console.error('Erro ao buscar os clientes:', error);\n          this.contacts = [];\n        });\n    },\n    openEditModal(contact) {\n      this.selectedContact = contact;\n    },\n    updateContact(updatedContact) {\n      const index = this.contacts.findIndex(contact => contact.id === updatedContact.id);\n      if (index !== -1) {\n        this.contacts.splice(index, 1, updatedContact);\n      }\n      this.selectedContact = null;\n    },\n  },\n  mounted() {\n    this.fetchContacts();\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos para ContactList */\n</style>\n"],"mappings":";;;EAAAA,GAAA;AAAA;gEAIMC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAc,YAAV,OAAK,E;mBATnB;;;uBACEC,mBAAA,CAuBM,c,gBAtBJD,mBAAA,CAAwE;IAAjEE,IAAI,EAAC,QAAQ;IAACC,WAAW,EAAC,gBAAgB;IAFrD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE+DC,KAAA,CAAAC,WAAW,GAAAF,MAAA;iDAAXC,KAAA,CAAAC,WAAW,E,GACzDD,KAAA,CAAAE,QAAQ,CAACC,MAAM,Q,cAA5BR,mBAAA,CAmBQ,SAtBZS,UAAA,GAIMC,UAOQ,EACRX,mBAAA,CASQ,iB,kBARNC,mBAAA,CAOKW,SAAA,QApBbC,WAAA,CAa8BC,QAAA,CAAAC,gBAAgB,EAA3BC,OAAO;yBAAlBf,mBAAA,CAOK;MAPoCF,GAAG,EAAEiB,OAAO,CAACC;QACpDjB,mBAAA,CAA2B,YAAAkB,gBAAA,CAApBF,OAAO,CAACG,IAAI,kBACnBnB,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBF,OAAO,CAACI,KAAK,kBACpBpB,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBF,OAAO,CAACK,KAAK,kBACpBrB,mBAAA,CAEK,aADHA,mBAAA,CAAuD;MAA9CsB,OAAK,EAAAjB,MAAA,IAAES,QAAA,CAAAS,aAAa,CAACP,OAAO;OAAG,QAAM,iBAlB1DQ,UAAA,E;wCAAAC,mBAAA,gBAuB4BnB,KAAA,CAAAoB,eAAe,I,cAAvCC,YAAA,CAA8FC,2BAAA;IAvBlG7B,GAAA;IAuB8CiB,OAAO,EAAEV,KAAA,CAAAoB,eAAe;IAAGG,QAAM,EAAEf,QAAA,CAAAgB;sDAvBjFL,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}